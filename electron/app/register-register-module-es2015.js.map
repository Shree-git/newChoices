{"version":3,"sources":["./src/app/register/register.page.html","./src/app/register/register-routing.module.ts","./src/app/register/register.module.ts","./src/app/register/register.page.scss","./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title class=\\\"ion-text-center\\\">Choices</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"registerCard positionCard\\\">\\n    <ion-card-header class=\\\"ion-text-center\\\" style=\\\"background-color: var(--ion-color-primary);\\\"> <ion-label class=\\\"signupLabel\\\">Sign Up</ion-label></ion-card-header>\\n    <ion-card-content>\\n      <ion-list lines=\\\"none\\\">\\n        <form [formGroup]=\\\"registerForm\\\">\\n          <ion-item class=\\\"roundedCorners\\\">\\n            <ion-label position=\\\"floating\\\">First Name</ion-label>\\n            <ion-input\\n              \\n              formControlName=\\\"firstName\\\"\\n              type=\\\"text\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container\\n              *ngFor=\\\"let validation of validation_messages.firstName\\\"\\n            >\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('firstName').hasError(validation.type) && (registerForm.get('firstName').dirty || registerForm.get('firstName').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n            <ion-input\\n              formControlName=\\\"lastName\\\"\\n              type=\\\"text\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container\\n              *ngFor=\\\"let validation of validation_messages.lastName\\\"\\n            >\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('lastName').hasError(validation.type) && (registerForm.get('lastName').dirty || registerForm.get('lastName').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Phone Number</ion-label>\\n            <ion-input\\n              formControlName=\\\"phoneNumber\\\"\\n              type=\\\"text\\\"\\n              \\n            ></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container\\n              *ngFor=\\\"let validation of validation_messages.phoneNumber\\\"\\n            >\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('phoneNumber').hasError(validation.type) && (registerForm.get('phoneNumber').dirty || registerForm.get('phoneNumber').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('email').hasError(validation.type) && (registerForm.get('email').dirty || registerForm.get('email').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Password</ion-label>\\n            <ion-input\\n              formControlName=\\\"password\\\"\\n              type=\\\"password\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container\\n              *ngFor=\\\"let validation of validation_messages.password\\\"\\n            >\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('password').hasError(validation.type) && (registerForm.get('password').dirty || registerForm.get('password').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n            <ion-input\\n              formControlName=\\\"cpassword\\\"\\n              type=\\\"password\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container\\n              *ngFor=\\\"let validation of validation_messages.cpassword\\\"\\n            >\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('cpassword').hasError(validation.type) && (registerForm.get('cpassword').dirty || registerForm.get('cpassword').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n            <div\\n              class=\\\"error-message\\\"\\n              *ngIf=\\\"!registerForm.get('cpassword').errors && registerForm.hasError('passwordNotMatch') && (registerForm.get('cpassword').dirty || registerForm.get('cpassword').touched)\\\"\\n            >\\n              Password and Confirm Password do not match!\\n            </div>\\n          </div>\\n        </form>\\n      </ion-list>\\n      <ion-button\\n        expand=\\\"full\\\"\\n        color=\\\"primary\\\"\\n        [disabled]=\\\"!registerForm.valid\\\"\\n        (click)=\\\"register()\\\"\\n        color=\\\"tertiary\\\"\\n        >Create Account!</ion-button\\n      >\\n      <div class=\\\"validation-errors\\\">\\n       \\n        <div\\n          class=\\\"error-message\\\"\\n          *ngIf=\\\"loginError\\\"\\n        >\\n          {{ loginErrorMessage }}\\n        </div>\\n   \\n    </div>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"positionCard\\\">\\n    <ion-card-content class=\\\"ion-text-center\\\">\\n      <h2>Already have an account? <ion-button routerLink=\\\"../login\\\" color=\\\"tertiary\\\">Login</ion-button></h2>\\n      \\n    </ion-card-content>\\n  </ion-card>\\n\\n  <!-- <ion-card class=\\\"card-center\\\">\\n    <ion-card-header color=\\\"primary\\\">\\n      \\n      <ion-card-title class=\\\"ion-text-center\\\">Register</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">First Name</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"fName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"lName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"cpassword\\\"></ion-input>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button color=\\\"primary\\\" expand=\\\"full\\\" fill=\\\"solid\\\" [disabled]=\\\"email==''&&password==''&&cpassword==''&&fName==''&&lName==''\\\" (click)=\\\"register()\\\">Register</ion-button>\\n        </ion-col>\\n        <ion-col>\\n          <ion-button color=\\\"secondary\\\" expand=\\\"full\\\" fill=\\\"solid\\\" routerLink=\\\"../login\\\">Login</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-content>\\n  </ion-card> -->\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".card-center {\\n  transform: translateX(-50%) translateY(-50%);\\n  top: 50%;\\n  left: 50%;\\n  width: 90%;\\n  margin: 0;\\n  position: absolute;\\n}\\n\\n.error-message {\\n  color: var(--ion-color-danger);\\n}\\n\\n.signupLabel {\\n  font-size: 1.6em;\\n  font-weight: bold;\\n}\\n\\n.positionCard {\\n  position: relative;\\n  border-radius: 15px;\\n  top: 7%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvRDpcXFZhbHBvIENvdXJzZXNcXFNwcmluZyAnMjBcXFNvZnR3YXJlIERlc2lnbiBhbmQgRGV2ZWxvcG1lbnRcXElvbmljIFByb2plY3RzXFxOZXdDaG9pY2VzXFxjaG9pY2VzTmV3L3NyY1xcYXBwXFxyZWdpc3RlclxccmVnaXN0ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw0Q0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksOEJBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURHQTtFQUNJLGtCQUFBO0VBQ0EsbUJBQUE7RUFFRixPQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1jZW50ZXJ7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2V7XHJcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XHJcbn1cclxuXHJcbi5zaWdudXBMYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIC8vIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxufVxyXG5cclxuLnBvc2l0aW9uQ2FyZHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgXHJcbiAgdG9wOiA3JTtcclxufVxyXG5cclxuXHJcblxyXG4vLyAucm91bmRlZENvcm5lcnN7XHJcbi8vICAgICBib3JkZXItcmFkaXVzOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbi8vICAgICAvLyAvLyBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xyXG4vLyAgICAgLy8gLy8gZm9udC1zaXplOiAwLjllbTtcclxuLy8gICAgIGJvcmRlcjogMXB4IHNvbGlkICFpbXBvcnRhbnQ7XHJcbi8vICAgICAvLyAtLWJhY2tncm91bmQ6IHJnYigyMTksMjE5LDIxOSkgIWltcG9ydGFudDtcclxuLy8gICAgIC8qIGhlaWdodDogMTAlOyAqL1xyXG4vLyAgICAgLyogd2lkdGg6IDQxJTsgKi9cclxuLy8gICAgIC8vIG1heC13aWR0aDogNTB2dzsgLy8gdGhpcyBpcyBhcHBseWluZyBwZXJmZWN0bHlcclxuLy8gICAgIC8vIG1heC1oZWlnaHQ6IDEwdmg7XHJcbi8vIH0iLCIuY2FyZC1jZW50ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4uc2lnbnVwTGFiZWwge1xuICBmb250LXNpemU6IDEuNmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnBvc2l0aW9uQ2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgdG9wOiA3JTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Account } from '../models/account.model';\nimport { AccountService } from '../settings/account/account.service';\nimport { Platform } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService, private accountService: AccountService, private router: Router,\n    private platform: Platform) {\n    \n      this.registerForm = this.formBuilder.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        phoneNumber: ['', Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')],\n        email: ['', Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n        ])],\n        password: ['', Validators.compose([\n          Validators.minLength(5),\n          Validators.required,\n          // Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n        ])],\n        cpassword: ['', Validators.required]\n      }, { \n        validators: this.password.bind(this)\n      })\n     }\n  email: string\n  fName: string\n  lName: string\n  // password: string\n  cpassword: string\n  account: Account\n  backButtonSubscription;\n  registerForm: FormGroup;\n  loginError: boolean = false;\n  loginErrorMessage: string = ''\n\n  public validation_messages = {\n    firstName: [\n      { type: 'required', message: 'First Name is required' }\n    ],\n    lastName: [\n      { type: 'required', message: 'Last Name is required' }\n    ],\n    phoneNumber: [\n      { type: 'pattern', message: 'Please enter a valid phone number' }\n    ],\n    email: [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Please enter a valid email address' }\n    ],\n    password: [\n      { type: 'required', message: 'Password is required' },\n      // { type: 'pattern', message: 'Please enter a valid password' },\n      { type: 'minLength', message: 'Password must be over 5 characters' }\n    ],\n    cpassword: [\n      { type: 'required', message: 'Password is required' }\n    ]\n  }\n\n  ngOnInit() {\n  }\n\n\n  \n  ionViewDidEnter(){ this.backButtonSubscription = this.platform.backButton.subscribe(()=>{ \n    if ((this.router.isActive('/register', true) && this.router.url === '/register')) {\n      navigator['app'].exitApp();\n    }\n    }); } \n  \n  ionViewWillLeave(){ this.backButtonSubscription.unsubscribe();}\n\n  password(formGroup: FormGroup) {\n    const { value: password } = formGroup.get('password');\n    const { value: confirmPassword } = formGroup.get('cpassword');\n    return password === confirmPassword ? null : { passwordNotMatch: true };\n  }\n\n  register(){\n    // if(this.password === this.cpassword){\n    //   this.authService.register(this.email, this.password).then(()=>{\n    //     this.router.navigate(['/tabs'])\n    //     this.account = {\n    //       fName: this.fName,\n    //       lName: this.lName\n    //     }\n    //     this.accountService.updateAccount(this.account)\n        \n    //   })\n\n    // }\n\n       this.authService.register(this.registerForm.get('email').value, this.registerForm.get('password').value).then(()=>{\n        this.router.navigate(['/tabs'])\n        this.account = {\n          fName: this.registerForm.get('firstName').value,\n          lName: this.registerForm.get('lastName').value,\n          mobileNumber: this.registerForm.get('phoneNumber').value\n        }\n        this.accountService.createAccount(this.account)\n        \n      }).catch(err=>{\n        this.loginError = true;\n        this.loginErrorMessage = err.message\n      })\n  }\n\n}\n"],"sourceRoot":"webpack:///"}