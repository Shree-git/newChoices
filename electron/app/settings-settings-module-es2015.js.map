{"version":3,"sources":["./src/app/settings/settings.page.html","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.scss","./src/app/settings/settings.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,g6BAAi2B,E;;;;;;;;;;;;;;;;;;;ACAv0B;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;IACD;QACE,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,6MAAkC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC;KACvF;CACF,CAAC;AAMF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACpBG;AACM;AACF;AAEA;AAEyB;AAEvB;AAW/C,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kFAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACnB/B;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;;;;;;;;;ACAtJ;AACL;AACc;AAO3D,IAAa,YAAY,GAAzB,MAAa,YAAY;IAGvB,YAAoB,WAAwB,EAAU,eAA+B;QAAjE,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAFrF,gBAAW,GAAY,KAAK;QAG1B,sDAAsD;QACtD,uDAAuD;QACvD,oEAAoE;QACpE,SAAS;QACT,+DAA+D;QAC/D,kEAAkE;QAClE,IAAI;QACJ,4DAA4D;QAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3D,wDAAwD;QACxD,2DAA2D;QAC3D,+DAA+D;QAC/D,yDAAyD;QACzD,sFAAsF;QACtF,SAAS;QAET,gEAAgE;QAChE,yDAAyD;QACzD,sFAAsF;QACtF,IAAI;IACN,CAAC;IAED,QAAQ;IAER,CAAC;IAED,MAAM,CAAC,KAAK;QACV,kCAAkC;QAClC,uCAAuC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;QACvC,sDAAsD;QACtD,4DAA4D;QAC5D,wDAAwD;QACxD,4DAA4D;QAE5D,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC;QAGlD,wDAAwD;IAC1D,CAAC;CACF;;YAzCkC,yDAAW;YAA2B,uEAAc;;AAH1E,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0NAAmC;;KAEpC,CAAC;GACW,YAAY,CA4CxB;AA5CwB","file":"settings-settings-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"moon\\\"></ion-icon>\\n      <ion-label>\\n        Dark Theme\\n      </ion-label>\\n      <ion-toggle (ionChange)=\\\"toggle($event)\\\" [(ngModel)]=\\\"themeToggle\\\" slot=\\\"end\\\"></ion-toggle>\\n    </ion-item>\\n  </ion-list>\\n  <ion-item routerLink=\\\"./account\\\">\\n    <ion-row>\\n      <ion-col>\\n        <ion-title>Account</ion-title>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-label>Edit name, email, password</ion-label>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n  \\n  \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  },\n  {\n    path: 'account',\n    loadChildren: () => import('./account/account.module').then( m => m.AccountPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { DarkService } from './dark.service';\nimport { AccountService } from './account/account.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  themeToggle: boolean = false\n  toggleValue: boolean;\n  constructor(private darkService: DarkService, private acccountService: AccountService) { \n    // if(this.acccountService.account.darkTheme == null){\n    //   this.acccountService.updateTheme(this.themeToggle)\n    //   console.log(\"initial \", this.acccountService.account.darkTheme)\n    // }else{\n    //   this.themeToggle = this.acccountService.account.darkTheme;\n    //   console.log(\"final \", this.acccountService.account.darkTheme)\n    // }\n    // document.body.classList.toggle('dark', this.themeToggle);\n    this.themeToggle = JSON.parse(localStorage.getItem('dark'))\n    // // this.darkService.toggleDarkTheme(this.themeToggle)\n    // if (typeof localStorage.getItem('dark') == \"undefined\"){\n    //   localStorage.setItem('dark', this.themeToggle.toString()) \n    //   console.log(\"initial\", localStorage.getItem('dark'))\n    //   document.body.classList.toggle('dark', JSON.parse(localStorage.getItem('dark')));\n    // }else{\n      \n    //   this.themeToggle = JSON.parse(localStorage.getItem('dark'))\n    //   console.log(\"already\", localStorage.getItem('dark'))\n    //   document.body.classList.toggle('dark', JSON.parse(localStorage.getItem('dark')));\n    // }\n  }\n\n  ngOnInit() {\n  \n  }\n\n  toggle(event){\n    // console.log(event.target.value)\n    // this.themeToggle = !this.themeToggle\n    console.log('change', this.themeToggle)\n    // this.acccountService.updateTheme(this.themeToggle);\n    // localStorage.setItem('dark', this.themeToggle.toString())\n    // // this.darkService.toggleDarkTheme(this.themeToggle)\n    // document.body.classList.toggle('dark', this.themeToggle);\n\n    this.darkService.toggleDarkTheme(this.themeToggle)\n    \n  \n    // console.log(JSON.parse(localStorage.getItem('dark')))\n  }\n}\n"],"sourceRoot":"webpack:///"}