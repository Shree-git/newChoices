{"version":3,"sources":["./src/app/inbox/inbox.page.html","./src/app/inbox/inbox-routing.module.ts","./src/app/inbox/inbox.module.ts","./src/app/inbox/inbox.page.scss","./src/app/inbox/inbox.page.ts","./src/app/inbox/inbox.service.ts"],"names":[],"mappings":"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","file":"inbox-inbox-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\"> \\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"margin-left: 100px;\\\">Chats</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div\\n    *ngFor=\\\"let user of (users|async)\\\"\\n    [routerLink]=\\\"['./chat/', user.id, user.fName+' '+user.lName]\\\"\\n    \\n  >\\n    <div *ngIf=\\\"user.id != myId\\\" class=\\\"userCard\\\">\\n      <div class=\\\"avatarP\\\">\\n        <ion-avatar *ngIf=\\\"user.account$ | async as accounty\\\">\\n          <ion-img [src]=\\\"accounty.photoURL\\\"></ion-img>\\n        </ion-avatar>\\n      </div>\\n      <div class=\\\"name\\\">\\n        <h2>{{ user.fName }} {{user.lName }}</h2>\\n      </div>\\n      <!-- <div *ngIf=\\\"user.unreadCount | async as unread\\\" class=\\\"numOfMsg\\\">\\n        <h4>{{ unread }}</h4>\\n      </div> -->\\n\\n      <div\\n        *ngIf=\\\"user.presence$ | async as presence\\\"\\n        class=\\\"onOff\\\"\\n        [ngClass]=\\\"{\\n        'is-success':  presence.status  === 'online',\\n        'is-warning': presence.status  === 'away',\\n        'is-danger':  presence.status  === 'offline'\\n    }\\\"\\n      >\\n        <!-- {{ presence.status }} -->\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <ion-card *ngFor=\\\"let user of (users|async)\\\" [routerLink]=\\\"['./chat/', user.id]\\\" class=\\\"userCard\\\"> -->\\n  <!-- <ion-card-header *ngIf=\\\"user.id != myId\\\">\\n      <div *ngIf=\\\"user.presence$ | async as presence\\\" class=\\\"onOff\\\"\\n      [ngClass]=\\\"{\\n          'is-success':  presence.status  === 'online',\\n          'is-warning': presence.status  === 'away',\\n          'is-danger':  presence.status  === 'offline'\\n      }\\\"\\n>\\n\\n  {{ presence.status }}\\n</div>\\n    </ion-card-header> -->\\n  <!-- <ion-card-content *ngIf=\\\"user.id != myId\\\">\\n      \\n      <ion-avatar *ngIf=\\\"user.account$ | async as accounty\\\">\\n        <ion-img [src]=\\\"accounty.photoURL\\\"></ion-img>\\n      </ion-avatar>\\n    \\n      <h2>{{ user.fName }} {{user.lName }}</h2>\\n      <div *ngIf=\\\"user.presence$ | async as presence\\\" class=\\\"onOff\\\"\\n      [ngClass]=\\\"{\\n          'is-success':  presence.status  === 'online',\\n          'is-warning': presence.status  === 'away',\\n          'is-danger':  presence.status  === 'offline'\\n      }\\\"\\n>\\n\\n  {{ presence.status }}\\n</div>\\n    </ion-card-content>\\n  </ion-card> -->\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InboxPage } from './inbox.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InboxPage\n  },\n  {\n    path: 'chat/:chatId/:name',\n    loadChildren: () => import('./chat/chat.module').then( m => m.ChatPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InboxPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InboxPageRoutingModule } from './inbox-routing.module';\n\nimport { InboxPage } from './inbox.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InboxPageRoutingModule\n  ],\n  declarations: [InboxPage]\n})\nexport class InboxPageModule {}\n","export default \".userCard {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: row;\\n  margin: auto;\\n  height: 50px;\\n  margin-top: 5px;\\n  background: linear-gradient(to right, var(--ion-color-primary), var(--ion-color-secondary), var(--ion-color-tertiary));\\n  padding: 10px;\\n}\\n\\n.avatarP {\\n  flex: 0.35;\\n  align-items: center;\\n}\\n\\nion-avatar {\\n  max-width: 35px;\\n  max-height: 35px;\\n}\\n\\n.name {\\n  flex: 2;\\n}\\n\\n.name h2 {\\n  font-weight: 100;\\n}\\n\\n.is-success {\\n  background-color: var(--ion-color-success);\\n}\\n\\n.is-warning {\\n  background-color: var(--ion-color-warning);\\n}\\n\\n.is-danger {\\n  background-color: var(--ion-color-danger);\\n}\\n\\n.onOff {\\n  flex: 0.12;\\n  align-items: center;\\n  height: 20px;\\n  width: 20px;\\n  border-radius: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5ib3gvRDpcXFZhbHBvIENvdXJzZXNcXFNwcmluZyAnMjBcXFNvZnR3YXJlIERlc2lnbiBhbmQgRGV2ZWxvcG1lbnRcXElvbmljIFByb2plY3RzXFxOZXdDaG9pY2VzXFxjaG9pY2VzTmV3L3NyY1xcYXBwXFxpbmJveFxcaW5ib3gucGFnZS5zY3NzIiwic3JjL2FwcC9pbmJveC9pbmJveC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBRUEsWUFBQTtFQUNBLFlBQUE7RUFFQSxlQUFBO0VBQ0Esc0hBQUE7RUFFQSxhQUFBO0FDTEo7O0FEU0E7RUFDSSxVQUFBO0VBQ0EsbUJBQUE7QUNOSjs7QURTQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtBQ05KOztBRFNBO0VBQ0ksT0FBQTtBQ05KOztBRFdBO0VBQ0ksZ0JBQUE7QUNSSjs7QURZQTtFQUNJLDBDQUFBO0FDVEo7O0FEWUE7RUFDSSwwQ0FBQTtBQ1RKOztBRFlBO0VBQ0kseUNBQUE7QUNUSjs7QURZQTtFQUNJLFVBQUE7RUFDQSxtQkFBQTtFQUlBLFlBQUE7RUFDSSxXQUFBO0VBR1IsbUJBQUE7QUNaQSIsImZpbGUiOiJzcmMvYXBwL2luYm94L2luYm94LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vICp7XHJcbi8vICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4vLyB9XHJcbi51c2VyQ2FyZHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgLy8gd2lkdGg6IDk1JTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIC8vIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KSx2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KSwgdmFyKC0taW9uLWNvbG9yLXRlcnRpYXJ5KSk7XHJcbiAgICBcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAvLyBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4uYXZhdGFyUHtcclxuICAgIGZsZXg6IDAuMzU7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG5pb24tYXZhdGFyIHtcclxuICAgIG1heC13aWR0aDogMzVweDtcclxuICAgIG1heC1oZWlnaHQ6IDM1cHg7XHJcbn1cclxuXHJcbi5uYW1le1xyXG4gICAgZmxleDoyO1xyXG4gICAgXHJcbiAgICBcclxufVxyXG5cclxuLm5hbWUgaDJ7XHJcbiAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgLy8gZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uaXMtc3VjY2Vzc3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1zdWNjZXNzKTtcclxufVxyXG5cclxuLmlzLXdhcm5pbmd7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itd2FybmluZyk7XHJcbn1cclxuXHJcbi5pcy1kYW5nZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcclxufVxyXG5cclxuLm9uT2Zme1xyXG4gICAgZmxleDogMC4xMjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAvLyB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gICAgLy8gZmxvYXQ6cmlnaHQ7XHJcbiAgICAvLyBib3JkZXI6MXB4IHNvbGlkIHJlZDtcclxuICAgIGhlaWdodDoyMHB4O1xyXG4gICAgICAgIHdpZHRoOjIwcHg7XHJcbi13ZWJraXQtYm9yZGVyLXJhZGl1czogNDBweDtcclxuLW1vei1ib3JkZXItcmFkaXVzOiA0MHB4O1xyXG5ib3JkZXItcmFkaXVzOiA0MHB4O1xyXG59XHJcblxyXG4iLCIudXNlckNhcmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgbWFyZ2luOiBhdXRvO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSksIHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnkpLCB2YXIoLS1pb24tY29sb3ItdGVydGlhcnkpKTtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLmF2YXRhclAge1xuICBmbGV4OiAwLjM1O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5pb24tYXZhdGFyIHtcbiAgbWF4LXdpZHRoOiAzNXB4O1xuICBtYXgtaGVpZ2h0OiAzNXB4O1xufVxuXG4ubmFtZSB7XG4gIGZsZXg6IDI7XG59XG5cbi5uYW1lIGgyIHtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbn1cblxuLmlzLXN1Y2Nlc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyk7XG59XG5cbi5pcy13YXJuaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXdhcm5pbmcpO1xufVxuXG4uaXMtZGFuZ2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG59XG5cbi5vbk9mZiB7XG4gIGZsZXg6IDAuMTI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDIwcHg7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNDBweDtcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiA0MHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { InboxService } from './inbox.service';\nimport { Observable } from 'rxjs';\nimport { Account } from '../models/account.model';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { User } from '../models/user.model';\nimport { PresenceService } from '../services/presence.service';\n\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.page.html',\n  styleUrls: ['./inbox.page.scss'],\n})\nexport class InboxPage implements OnInit {\n  users: Observable<any[]>\n  userData: Observable<User[]>\n  myId: string\n  presence$;\n  \n  constructor(\n    private presence: PresenceService,\n    private inboxService: InboxService, private authService: AuthenticationService) { \n    this.myId = this.authService.user.uid\n  }\n\n  ngOnInit() {\n    this.users = this.inboxService.getUsers();\n    // this.inboxService.getUsers().subscribe(elem=>{\n    //   console.log(elem)\n    // })\n    // this.inboxService.getUsers().subscribe(user=>{\n    //   user.forEach(elem=>{\n    //     this.presence$ = this.presence.getPresence(elem.id);\n\n    // this.presence.getPresence(elem.id).subscribe(ele=>{\n    //   console.log(ele)\n    // })\n    //   })\n    // });\n    // this.userData = this.inboxService.getUserData();\n    // this.users.subscribe(()=>{\n      \n    // })\n\n    // this.presence$ = this.presence.getPresence(this.iId);\n\n    // this.presence.getPresence(this.iId).subscribe(elem=>{\n    //   console.log(elem)\n    // })\n  }\n\n  ionViewWillEnter(){\n\n    // this.users = this.inboxService.getUsers();\n    // console.log(this.users)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { AccountService } from '../settings/account/account.service';\nimport { AngularFirestore, AngularFirestoreCollection, DocumentReference } from '@angular/fire/firestore';\nimport { Observable, pipe } from 'rxjs';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Account } from '../models/account.model';\nimport { map, take } from 'rxjs/operators';\nimport { Chat } from '../models/chat.model';\nimport { of } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { PresenceService } from '../services/presence.service';\n// import { combineLatest } from 'rxjs/observable/combineLatest';\n@Injectable({\n  providedIn: 'root'\n})\nexport class InboxService {\n  usersCollection: AngularFirestoreCollection\n  // users: Observable<Account[]>\n  users: Observable<any[]>\n  userData: Observable<User[]>\n  accounts: Observable<Account>[]\n  // messages: Observable<Chat[]>\n  messages: any\n  presence$;\n  account: Account = {\n    id: '',\n    fName: '',\n    lName: '',\n    role: '',\n    darkTheme: null,\n  }\n  myAccount: Account = {\n    id: '',\n    fName: '',\n    lName: '',\n    role: '',\n    darkTheme: null,\n  }\n  data: BehaviorSubject<any> = new BehaviorSubject(0);\n  constructor(\n    private presence: PresenceService,\n    private authService: AuthenticationService, private accService: AccountService,\n    private afStore: AngularFirestore) {\n    this.users = this.afStore.collection('accounts').snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data() as Account\n        const id = a.payload.doc.id;\n        return { id, ...data }\n      })\n    }))\n    // this.users = this.afStore.collection('users').snapshotChanges().pipe(map(actions=>{\n    //   return actions.map(a=>{\n    //     const data = a.payload.doc.data()\n    //     const id = a.payload.doc.id;\n\n    //     // const acc = this.getAccount(id)\n    //     // console.log(acc)\n    //     return {id, data}\n    //     // return {id, data}\n    //   })\n    // }))\n\n    // this.users.forEach(element => {\n    //   element.forEach(e => {\n    //     this.accounts.push(this.getAccount(e.id))\n    //   });\n    //   // this.accounts.push(this.getAccount(element.id))\n    // });\n\n    // console.log(this.accounts)\n  }\n\n  getUsers() {\n    this.users = this.afStore.collection('accounts',\n    ref=>ref.where('clients', 'array-contains', this.authService.user.uid)).snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data() as Account\n        var id = a.payload.doc.id;\n        var presence$ = this.presence.getPresence(id);\n\n      this.presence.getPresence(id).subscribe(ele=>{\n      console.log(ele)\n      })\n        var account$ = this.afStore.collection('users').doc(id).valueChanges()\n\n        var unreadCount = this.getData().subscribe(dat=>{\n          console.log(dat)\n          console.log(dat.length)\n          return dat.length\n        })\n        console.log(unreadCount)\n      \n\n        \n        \n        // console.log(account$)\n        // const acc = this.getAccount(id)\n        // // console.log(acc)\n        // return {acc}\n       \n        return { id, ...data, presence$, account$, unreadCount }\n        \n      })\n    }))\n    return this.users;\n  }\n\n  getUserData(){\n    this.userData = this.afStore.collection('users').snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data() as User\n        var id = a.payload.doc.id;\n        \n        // const acc = this.getAccount(id)\n        // // console.log(acc)\n        // return {acc}\n        return { id, ...data }\n      })\n    }))\n    return this.userData;\n  }\n\n  getAccount(id: string) {\n    this.afStore.collection('accounts').doc<Account>\n      (id).\n      valueChanges().pipe(\n        take(1),\n        map(account => {\n          account.id = id;\n          return account\n        })\n      ).subscribe(account => {\n        this.account = account\n      })\n    return this.account\n  }\n\n  getChat(sender: string, receiver: string): Observable<Chat[]> {\n    // return this.afStore.collection('users').doc(this.authService.user.uid).collection('chat').doc<Chat>(chatId).valueChanges().pipe(\n    //   // take(1),\n    //   map(chat=>{\n    //     chat.id = chatId;\n    //     return chat\n    //   })\n    // )\n\n    const californiaRef = this.afStore\n      .collection(\"chat\", ref => ref.where('sender', '==', sender)\n        .where('receiver', '==', receiver).limit(50)\n        );\n    const coloradoRef = this.afStore\n      .collection(\"chat\", ref => ref\n        .where('sender', '==', receiver)\n        .where('receiver', '==', sender).limit(50)\n        );\n    this.messages =\n      combineLatest(californiaRef.valueChanges(),\n        coloradoRef.valueChanges()).pipe(\n    switchMap(cities => {\n          const [californiaCities, coloradoCities] = cities;\n          const combined = californiaCities.concat(coloradoCities);\n\n          return of(combined);\n        }));\n    // .pipe(\n    //   map(arr => arr.reduce((acc, cur) => acc.concat(cur) ) ),)\n\n    // this.messages = this.afStore.collection('chat', ref => {\n    //   return ref.where('sender', 'in', [sender, receiver])\n    //     // .where('sender', '==', receiver)\n    //     // .where('receiver', '==', sender)\n    //     .where('receiver', '==', receiver)\n    //     .orderBy('createdAt', 'asc')\n    // })\n    //   .snapshotChanges()\n    //   .pipe(map(actions => {\n    //     return actions.map(a => {\n    //       const data = a.payload.doc.data() as Chat\n    //       const id = a.payload.doc.id\n    //       return { id, ...data };\n    //     })\n    //   }))\n\n    return this.messages\n    // this.journals = this.journalsCollection.snapshotChanges().pipe(map(actions=>{\n    //   return actions.map(a =>{\n    //     const data = a.payload.doc.data() as Journal\n    //     const id = a.payload.doc.id\n    //     return {id, ...data };\n    //   })\n    // }))\n  }\n\n  getUnreadChat(sender: string, receiver: string) {\n    // var count;\n   this.afStore.collection(\"chat\", ref=> ref.where('sender', '==', sender).where('receiver', '==', receiver)\n      .where('read', '==', false)\n    ).valueChanges().subscribe(count=>{\n      this.data.next(count)\n    })\n  \n    // return this.afStore.collection('users').doc(this.authService.user.uid).collection('chat').doc<Chat>(chatId).valueChanges().pipe(\n    //   // take(1),\n    //   map(chat=>{\n    //     chat.id = chatId;\n    //     return chat\n    //   })\n    // )\n\n    // const californiaRef = this.afStore\n    //   .collection(\"chat\", ref => ref.where('sender', '==', sender)\n    //     .where('receiver', '==', receiver).limit(50)\n    //     );\n    // const coloradoRef = this.afStore\n    //   .collection(\"chat\", ref => ref\n    //     .where('sender', '==', receiver)\n    //     .where('receiver', '==', sender).limit(50)\n    //     );\n    // this.messages =\n    //   combineLatest(californiaRef.valueChanges(),\n    //     coloradoRef.valueChanges()).pipe(\n    // switchMap(cities => {\n    //       const [californiaCities, coloradoCities] = cities;\n    //       const combined = californiaCities.concat(coloradoCities);\n\n    //       return of(combined);\n    //     }));\n\n\n    // .pipe(\n    //   map(arr => arr.reduce((acc, cur) => acc.concat(cur) ) ),)\n\n    // this.messages = this.afStore.collection('chat', ref => {\n    //   return ref.where('sender', 'in', [sender, receiver])\n    //     // .where('sender', '==', receiver)\n    //     // .where('receiver', '==', sender)\n    //     .where('receiver', '==', receiver)\n    //     .orderBy('createdAt', 'asc')\n    // })\n    //   .snapshotChanges()\n    //   .pipe(map(actions => {\n    //     return actions.map(a => {\n    //       const data = a.payload.doc.data() as Chat\n    //       const id = a.payload.doc.id\n    //       return { id, ...data };\n    //     })\n    //   }))\n\n    return this.messages\n    // this.journals = this.journalsCollection.snapshotChanges().pipe(map(actions=>{\n    //   return actions.map(a =>{\n    //     const data = a.payload.doc.data() as Journal\n    //     const id = a.payload.doc.id\n    //     return {id, ...data };\n    //   })\n    // }))\n  }\n  getData() {\n    return this.data.asObservable();\n  }\n  // getOtherChat(chatId: string): Observable<Chat>{\n  //   return this.afStore.collection('users').doc(chatId).collection('chat').doc<Chat>(this.authService.user.uid).valueChanges().pipe(\n  //     // take(1),\n  //     map(chat=>{\n  //       chat.id = chatId;\n  //       return chat\n  //     })\n  //   )\n  // }\n\n  addMessage(message: Chat): Promise<DocumentReference> {\n    return this.afStore.collection('chat').add(message)\n  }\n\n}\n"],"sourceRoot":"webpack:///"}