{"version":3,"sources":["webpack:///src/app/settings/account/display-photo/display-photo.page.html","webpack:///src/app/services/photo.service.ts","webpack:///src/app/settings/account/display-photo/display-photo-routing.module.ts","webpack:///src/app/settings/account/display-photo/display-photo.module.ts","webpack:///src/app/settings/account/display-photo/display-photo.page.scss","webpack:///src/app/settings/account/display-photo/display-photo.page.ts"],"names":["Camera","Filesystem","Storage","PhotoService","platform","PHOTO_STORAGE","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","getPhoto","resultType","Uri","source","quality","capturedPhoto","savePicture","savedImageFile","photo","set","key","value","is","JSON","stringify","photoCopy","base64","cameraPhoto","readAsBase64","base64Data","fileName","Date","getTime","writeFile","path","data","directory","Data","savedFile","filepath","uri","webviewPath","convertFileSrc","webPath","readFile","file","fetch","response","get","photos","parse","providedIn","routes","component","DisplayPhotoPageRoutingModule","imports","forChild","exports","DisplayPhotoPageModule","declarations","DisplayPhotoPage","photoService","firebase","authService","router","target","files","filePath","name","fileRef","ref","upload","snapshotChanges","pipe","getDownloadURL","subscribe","url","downloadURL","updatePhotoURL","photoUrl","getUser","photoURL","selector","template"],"mappings":"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","file":"display-photo-display-photo-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Display Photo</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"mainDiv\\\">\\n    <!-- <ion-grid>\\n      <ion-row>\\n      <ion-col size=\\\"6\\\" >\\n        <ion-img src=\\\"{{ photoService.photo.base64 ? photoService.photo.base64 : photoService.photo.webviewPath }}\\\"></ion-img>\\n      </ion-col>\\n      </ion-row>\\n    </ion-grid> -->\\n    <ion-img style=\\\"height:200px; width:200px\\\" [src]=\\\"downloadURL\\\"></ion-img>\\n    <!-- <ion-button (click)=\\\"photoService.addNewToGallery()\\\">\\n      <ion-icon name=\\\"camera\\\" slot=\\\"icon-only\\\"></ion-icon>\\n    </ion-button> -->\\n    \\n    <!-- <ion-label for=\\\"fileInput\\\" icon-only ion-button id=\\\"tempFileInput\\\">\\n      <ion-icon name=\\\"image\\\"></ion-icon>\\n    </ion-label> -->\\n    <!-- <div class=\\\"fileUpload\\\"> -->\\n      <!-- <ion-button color=\\\"secondary\\\">\\n        <ion-icon name=\\\"image\\\"></ion-icon>\\n      </ion-button> -->\\n      <input type=\\\"file\\\" name=\\\"file\\\" id=\\\"file\\\" class=\\\"inputfile\\\" (change)=\\\"photoChanged($event)\\\">\\n      <label for=\\\"file\\\">Choose an image</label>\\n  <!-- </div> -->\\n    <ion-button expand=\\\"block\\\" (click)=\\\"savePhoto()\\\" color=\\\"tertiary\\\">\\n      <ion-icon name=\\\"cloud-upload-outline\\\" style=\\\"margin-right: 10px\\\"></ion-icon>Upload</ion-button>\\n  </div>\\n\\n  \\n  \\n  \\n</ion-content>\\n\";","import { Injectable, OnInit } from '@angular/core';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, \n  CameraPhoto, CameraSource } from '@capacitor/core';\n\nconst { Camera, Filesystem, Storage } = Plugins;\nimport { Platform } from '@ionic/angular';\nimport { Photo } from '../models/photo.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService{\n  public photo: Photo;\n  private PHOTO_STORAGE: string = \"photos\";\n  private platform: Platform;\n\n  constructor(platform: Platform) { \n    this.platform = platform;\n\n  }\n  \n\n    \n  public async addNewToGallery() {\n    \n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n\n      // Save the picture and add it to photo collection\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    this.photo = savedImageFile;\n\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: this.platform.is('hybrid')\n      ? JSON.stringify(this.photo)\n      : JSON.stringify(()=>{\n              // Don't save the base64 representation of the photo data, \n              // since it's already saved on the Filesystem\n              const photoCopy = { ...this.photo };\n              delete photoCopy.base64;\n    \n              return photoCopy;\n              })\n    });\n  }\n\n  // Save picture to file on device\n  private async savePicture(cameraPhoto: CameraPhoto) {\n    // Convert photo to base64 format, required by Filesystem API to save\n    const base64Data = await this.readAsBase64(cameraPhoto);\n\n    // Write the file to the data directory\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n\n    if (this.platform.is('hybrid')) {\n      // Display the new image by rewriting the 'file://' path to HTTP\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    }\n    else {\n      // Use webPath to display the new image instead of base64 since it's\n      // already loaded into memory\n      return {\n        filepath: fileName,\n        webviewPath: cameraPhoto.webPath\n      };\n    }\n  }\n\n   private async readAsBase64(cameraPhoto: CameraPhoto) {\n    if (this.platform.is('hybrid')) {\n      // Read the file into base64 format\n      const file = await Filesystem.readFile({\n        path: cameraPhoto.path\n      });\n  \n      return file.data;\n    }\n    else {\n      // Fetch the photo, read as a blob, then convert to base64 format\n      const response = await fetch(cameraPhoto.webPath);\n      const blob = await response.blob();\n  \n      return await this.convertBlobToBase64(blob) as string;\n    }\n  }\n  \n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n\n  public async loadSaved() {\n    // Retrieve cached photo array data\n    const photos = await Storage.get({ key: this.PHOTO_STORAGE });\n    this.photo = JSON.parse(photos.value) || [];\n  \n    // Easiest way to detect when running on the web:\n    // “when the platform is NOT hybrid, do this”\n    if (!this.platform.is('hybrid')) {\n      // Display the photo by reading into base64 format\n    \n        // Read each saved photo's data from the Filesystem\n        const readFile = await Filesystem.readFile({\n            path: this.photo.filepath,\n            directory: FilesystemDirectory.Data\n        });\n  \n        // Web platform only: Save the photo into the base64 field\n        this.photo.base64 = `data:image/jpeg;base64,${readFile.data}`;\n      \n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DisplayPhotoPage } from './display-photo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DisplayPhotoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DisplayPhotoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DisplayPhotoPageRoutingModule } from './display-photo-routing.module';\n\nimport { DisplayPhotoPage } from './display-photo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DisplayPhotoPageRoutingModule\n  ],\n  declarations: [DisplayPhotoPage]\n})\nexport class DisplayPhotoPageModule {}\n","export default \".inputfile {\\n  width: 0.1px;\\n  height: 0.1px;\\n  opacity: 0;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1;\\n}\\n\\n.inputfile + label {\\n  font-size: 1em;\\n  font-weight: 700;\\n  color: white;\\n  background-color: var(--ion-color-secondary);\\n  display: inline-block;\\n  margin: 10px;\\n  margin-bottom: 75px;\\n  width: 180px;\\n  height: 50x;\\n  padding: 10px;\\n  text-align: center;\\n}\\n\\n.inputfile:focus + label,\\n.inputfile + label:hover {\\n  background-color: var(--ion-color-tertiary);\\n}\\n\\n.inputfile:focus + label {\\n  outline: 1px dotted #000;\\n  outline: -webkit-focus-ring-color auto 5px;\\n}\\n\\n.inputfile + label * {\\n  pointer-events: none;\\n}\\n\\n.mainDiv {\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n}\\n\\n.fileUpload {\\n  position: relative;\\n  overflow: hidden;\\n  text-align: center;\\n  padding: 30px 0;\\n}\\n\\n.fileUpload ion-button {\\n  width: 50px;\\n  height: 50px;\\n}\\n\\n.upload {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  margin: 0;\\n  padding: 0;\\n  font-size: 20px;\\n  cursor: pointer;\\n  opacity: 0;\\n  filter: alpha(opacity=0);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvYWNjb3VudC9kaXNwbGF5LXBob3RvL0Q6XFxWYWxwbyBDb3Vyc2VzXFxTcHJpbmcgJzIwXFxTb2Z0d2FyZSBEZXNpZ24gYW5kIERldmVsb3BtZW50XFxJb25pYyBQcm9qZWN0c1xcTmV3Q2hvaWNlc1xcY2hvaWNlc05ldy9zcmNcXGFwcFxcc2V0dGluZ3NcXGFjY291bnRcXGRpc3BsYXktcGhvdG9cXGRpc3BsYXktcGhvdG8ucGFnZS5zY3NzIiwic3JjL2FwcC9zZXR0aW5ncy9hY2NvdW50L2Rpc3BsYXktcGhvdG8vZGlzcGxheS1waG90by5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0E7RUFDQyxZQUFBO0VBQ0EsYUFBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0csV0FBQTtBQ1ZKOztBRGdCQTtFQUNJLGNBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSw0Q0FBQTtFQUNBLHFCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUNiSjs7QURnQkE7O0VBRUksMkNBQUE7QUNiSjs7QURnQkE7RUFDQyx3QkFBQTtFQUNBLDBDQUFBO0FDYkQ7O0FEZ0JBO0VBQ0Msb0JBQUE7QUNiRDs7QURnQkE7RUFDSSxrQkFBQTtFQUNGLFNBQUE7RUFDQSxRQUFBO0VBQ0EsZ0NBQUE7QUNiRjs7QURnQkE7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FDYko7O0FEaUJBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNkSjs7QURpQkE7RUFDSSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7RUFDQSx3QkFBQTtBQ2RKIiwiZmlsZSI6InNyYy9hcHAvc2V0dGluZ3MvYWNjb3VudC9kaXNwbGF5LXBob3RvL2Rpc3BsYXktcGhvdG8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gI2ZpbGVJbnB1dHtcclxuLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gICAgIG9wYWNpdHk6IDA7XHJcbi8vICAgICB3aWR0aDogNTBweDtcclxuLy8gICAgIGhlaWdodDogNTBweDtcclxuLy8gICB9XHJcblxyXG4jdGVtcEZpbGVJbnB1dHtcclxuICAgIFxyXG59XHJcblxyXG4uaW5wdXRmaWxlIHtcclxuXHR3aWR0aDogMC4xcHg7XHJcblx0aGVpZ2h0OiAwLjFweDtcclxuXHRvcGFjaXR5OiAwO1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgICBcclxufVxyXG5cclxuXHJcblxyXG4uaW5wdXRmaWxlICsgbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxLjBlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbjoxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNzVweDtcclxuICAgIHdpZHRoOiAxODBweDtcclxuICAgIGhlaWdodDogNTB4O1xyXG4gICAgcGFkZGluZzoxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uaW5wdXRmaWxlOmZvY3VzICsgbGFiZWwsXHJcbi5pbnB1dGZpbGUgKyBsYWJlbDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItdGVydGlhcnkpO1xyXG59XHJcblxyXG4uaW5wdXRmaWxlOmZvY3VzICsgbGFiZWwge1xyXG5cdG91dGxpbmU6IDFweCBkb3R0ZWQgIzAwMDtcclxuXHRvdXRsaW5lOiAtd2Via2l0LWZvY3VzLXJpbmctY29sb3IgYXV0byA1cHg7XHJcbn1cclxuXHJcbi5pbnB1dGZpbGUgKyBsYWJlbCAqIHtcclxuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG5cclxuLm1haW5EaXZ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHRvcDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG59XHJcblxyXG4uZmlsZVVwbG9hZCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMzBweCAwO1xyXG4gICAgXHJcbn1cclxuXHJcbi5maWxlVXBsb2FkIGlvbi1idXR0b257XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxufVxyXG5cclxuLnVwbG9hZCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTApO1xyXG59IiwiLmlucHV0ZmlsZSB7XG4gIHdpZHRoOiAwLjFweDtcbiAgaGVpZ2h0OiAwLjFweDtcbiAgb3BhY2l0eTogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbn1cblxuLmlucHV0ZmlsZSArIGxhYmVsIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAxMHB4O1xuICBtYXJnaW4tYm90dG9tOiA3NXB4O1xuICB3aWR0aDogMTgwcHg7XG4gIGhlaWdodDogNTB4O1xuICBwYWRkaW5nOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5pbnB1dGZpbGU6Zm9jdXMgKyBsYWJlbCxcbi5pbnB1dGZpbGUgKyBsYWJlbDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci10ZXJ0aWFyeSk7XG59XG5cbi5pbnB1dGZpbGU6Zm9jdXMgKyBsYWJlbCB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgIzAwMDtcbiAgb3V0bGluZTogLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yIGF1dG8gNXB4O1xufVxuXG4uaW5wdXRmaWxlICsgbGFiZWwgKiB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ubWFpbkRpdiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi5maWxlVXBsb2FkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDMwcHggMDtcbn1cblxuLmZpbGVVcGxvYWQgaW9uLWJ1dHRvbiB7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDUwcHg7XG59XG5cbi51cGxvYWQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG9wYWNpdHk6IDA7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT0wKTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/storage';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { finalize } from 'rxjs/operators'\nimport { Router } from '@angular/router';\n\nimport { PhotoService } from 'src/app/services/photo.service';\n\n@Component({\n  selector: 'app-display-photo',\n  templateUrl: './display-photo.page.html',\n  styleUrls: ['./display-photo.page.scss'],\n})\nexport class DisplayPhotoPage implements OnInit {\n  file: File\n  downloadURL: string\n  photoUrl: string\n  constructor(public photoService: PhotoService,\n    private firebase: AngularFireStorage, private authService: AuthenticationService, private router: Router) { }\n  \n  ngOnInit() {\n    // this.photoService.loadSaved();\n\n  }\n\n  photoChanged(photo){\n    this.file = photo.target.files\n    var filePath = 'images/' + this.file[0].name\n    const fileRef = this.firebase.ref(filePath)\n    this.firebase.upload(filePath, this.file[0]).snapshotChanges().pipe(\n      finalize(()=>{\n        fileRef.getDownloadURL().subscribe(url =>{\n          this.downloadURL = url\n          \n        })\n      })\n    ).subscribe()\n  //   var storageRef = this.firebase.storage.ref()\n    \n  //   console.log(this.file[0].name)\n  //   const uploadTask = storageRef.child('images/' + this.file[0].name).put(this.file[0])\n  //   const task = storageRef.child('images/' + this.file[0].name)\n  //   task.getDownloadURL()\n\n  //   from(task.getDownloadURL()).subscribe(\n  //     download => );\n  //   uploadTask.on('state_changed', function(snapshot){ \n  //     // var progress =  \n  //     //  (snapshot.bytesTransferred / snapshot.totalBytes) * 100; \n     \n      \n  //     //   switch (snapshot.state) { \n  //     //     case this.firebase.storage.TaskState.PAUSED: \n  //     //       console.log('Upload is paused'); \n  //     //       break; \n  //     //     case this.firebase.storage.TaskState.RUNNING: \n  //     //       console.log('Upload is running'); \n  //     //       break; \n  //     //   } \n  //   }, function(error) {console.log(error); \n  //   }, function() { \n  //         // Upload completed successfully, now we can get the download URL\n  //     uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) =>{\n  //     this.downloadURL = downloadURL\n  //       console.log('File available at', this.downloadURL);\n      \n  // }).then(()=>{\n  //   console.log(this.downloadURL)\n  \n  //   this.authService.updatePhotoURL(this.downloadURL)\n  // })})\n\n\n\n}\n\n  savePhoto(){\n    this.authService.updatePhotoURL(this.downloadURL)\n    this.downloadURL = null\n  }\n\n  getPhoto(){\n   \n     this.photoUrl = this.authService.getUser().photoURL\n   \n  }\n\n\n}\n"]}