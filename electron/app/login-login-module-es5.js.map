{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","formBuilder","authService","router","platform","loginError","loginErrorMessage","validation_messages","email","type","message","password","registerForm","group","compose","required","pattern","minLength","login","get","value","then","navigate","err","backButtonSubscription","backButton","subscribe","isActive","url","navigator","exitApp","unsubscribe","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"\\n<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title class=\\\"ion-text-center\\\">Choices</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"registerCard positionCard\\\">\\n    <ion-card-header class=\\\"ion-text-center\\\" style=\\\"background-color: var(--ion-color-primary);\\\"> <ion-label class=\\\"signupLabel\\\">Login</ion-label></ion-card-header>\\n    <ion-card-content>\\n      <ion-list lines=\\\"none\\\">\\n        <form [formGroup]=\\\"registerForm\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('email').hasError(validation.type) && (registerForm.get('email').dirty || registerForm.get('email').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Password</ion-label>\\n            <ion-input\\n              formControlName=\\\"password\\\"\\n              type=\\\"password\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container\\n              *ngFor=\\\"let validation of validation_messages.password\\\"\\n            >\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('password').hasError(validation.type) && (registerForm.get('password').dirty || registerForm.get('password').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n  \\n         \\n\\n        </form>\\n      </ion-list>\\n      <ion-button\\n        expand=\\\"full\\\"\\n        color=\\\"primary\\\"\\n        [disabled]=\\\"!registerForm.valid\\\"\\n        (click)=\\\"login()\\\"\\n        color=\\\"tertiary\\\"\\n        >Login</ion-button\\n      >\\n      <div class=\\\"validation-errors\\\">\\n       \\n          <div\\n            class=\\\"error-message\\\"\\n            *ngIf=\\\"loginError\\\"\\n          >\\n            {{ loginErrorMessage }}\\n          </div>\\n     \\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"positionCard\\\" style=\\\"margin-top: 50px;\\\">\\n    <ion-card-content class=\\\"ion-text-center\\\">\\n      <h2>Don't have an account? </h2>\\n      <ion-button routerLink=\\\"../register\\\" color=\\\"tertiary\\\">Sign Up</ion-button>\\n      <h2>Forgot your password?</h2>\\n      <ion-button routerLink=\\\"../reset-password\\\" color=\\\"tertiary\\\">Reset Password</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <!-- <ion-card class=\\\"card-center\\\">\\n    <ion-card-header color=\\\"primary\\\">\\n      \\n      <ion-card-title class=\\\"ion-text-center\\\">Register</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">First Name</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"fName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"lName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"cpassword\\\"></ion-input>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button color=\\\"primary\\\" expand=\\\"full\\\" fill=\\\"solid\\\" [disabled]=\\\"email==''&&password==''&&cpassword==''&&fName==''&&lName==''\\\" (click)=\\\"register()\\\">Register</ion-button>\\n        </ion-col>\\n        <ion-col>\\n          <ion-button color=\\\"secondary\\\" expand=\\\"full\\\" fill=\\\"solid\\\" routerLink=\\\"../login\\\">Login</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-content>\\n  </ion-card> -->\\n</ion-content>\\n\\n<!-- <ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title class=\\\"ion-text-center\\\">Choices</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"card-center\\\">\\n    <ion-card>\\n      <ion-card-header color=\\\"primary\\\">\\n        \\n        <ion-card-title class=\\\"ion-text-center\\\">Login</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Email</ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Password</ion-label>\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <ion-row>\\n          <ion-col>\\n            <ion-button color=\\\"primary\\\" expand=\\\"full\\\" fill=\\\"solid\\\" (click)=\\\"login()\\\">Login</ion-button>\\n          </ion-col>\\n          <ion-col>\\n            <ion-button color=\\\"secondary\\\" expand=\\\"full\\\" fill=\\\"solid\\\" routerLink=\\\"../register\\\">Register</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n</ion-content> -->\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".card-center {\\n  transform: translateX(-50%) translateY(-50%);\\n  top: 50%;\\n  left: 50%;\\n  width: 90%;\\n  margin: 0;\\n  position: absolute;\\n}\\n\\n.error-message {\\n  color: var(--ion-color-danger);\\n}\\n\\n.signupLabel {\\n  font-size: 1.6em;\\n  font-weight: bold;\\n}\\n\\n.positionCard {\\n  position: relative;\\n  border-radius: 15px;\\n  top: 7%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXFZhbHBvIENvdXJzZXNcXFNwcmluZyAnMjBcXFNvZnR3YXJlIERlc2lnbiBhbmQgRGV2ZWxvcG1lbnRcXElvbmljIFByb2plY3RzXFxOZXdDaG9pY2VzXFxjaG9pY2VzTmV3L3NyY1xcYXBwXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0E7RUFDSSw0Q0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtBQ1ZKOztBRGFBO0VBQ0ksOEJBQUE7QUNWSjs7QURhQTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7QUNWSjs7QURjQTtFQUNJLGtCQUFBO0VBQ0EsbUJBQUE7RUFFRixPQUFBO0FDWkYiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAuY2FyZC1jZW50ZXJ7XHJcbi8vICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcclxuLy8gICAgIHRvcDogNTAlO1xyXG4vLyAgICAgbGVmdDogNTAlO1xyXG4vLyAgICAgd2lkdGg6IDkwJTtcclxuLy8gICAgIG1hcmdpbjogMDtcclxuLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHJcbiAgIFxyXG4vLyB9XHJcblxyXG4uY2FyZC1jZW50ZXJ7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2V7XHJcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XHJcbn1cclxuXHJcbi5zaWdudXBMYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIC8vIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxufVxyXG5cclxuLnBvc2l0aW9uQ2FyZHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgXHJcbiAgdG9wOiA3JTtcclxufVxyXG5cclxuXHJcblxyXG4vLyAucm91bmRlZENvcm5lcnN7XHJcbi8vICAgICBib3JkZXItcmFkaXVzOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbi8vICAgICAvLyAvLyBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xyXG4vLyAgICAgLy8gLy8gZm9udC1zaXplOiAwLjllbTtcclxuLy8gICAgIGJvcmRlcjogMXB4IHNvbGlkICFpbXBvcnRhbnQ7XHJcbi8vICAgICAvLyAtLWJhY2tncm91bmQ6IHJnYigyMTksMjE5LDIxOSkgIWltcG9ydGFudDtcclxuLy8gICAgIC8qIGhlaWdodDogMTAlOyAqL1xyXG4vLyAgICAgLyogd2lkdGg6IDQxJTsgKi9cclxuLy8gICAgIC8vIG1heC13aWR0aDogNTB2dzsgLy8gdGhpcyBpcyBhcHBseWluZyBwZXJmZWN0bHlcclxuLy8gICAgIC8vIG1heC1oZWlnaHQ6IDEwdmg7XHJcbi8vIH0iLCIuY2FyZC1jZW50ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4uc2lnbnVwTGFiZWwge1xuICBmb250LXNpemU6IDEuNmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnBvc2l0aW9uQ2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgdG9wOiA3JTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Platform } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  email: string\n  password: string\n  backButtonSubscription;\n  registerForm: FormGroup\n  loginError: boolean = false;\n  loginErrorMessage: string = ''\n  public validation_messages = {\n \n    email: [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Please enter a valid email address' }\n    ],\n    password: [\n      { type: 'required', message: 'Password is required' },\n      // { type: 'pattern', message: 'Please enter a valid password' },\n      { type: 'minLength', message: 'Password must be over 5 characters' }\n    ],\n  \n  }\n  constructor(private formBuilder: FormBuilder,\n\n    private authService: AuthenticationService, private router: Router, private platform: Platform) {\n    this.registerForm = this.formBuilder.group({\n   \n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      password: ['', Validators.compose([\n        Validators.minLength(5),\n        Validators.required,\n        // Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n      ])],\n    \n    })\n   }\n\n  ngOnInit() {\n  }\n\n  login(){\n    this.authService.login(this.registerForm.get('email').value, this.registerForm.get('password').value).then(()=>{\n      this.router.navigate(['/tabs'])\n    }).catch(err=>{\n      this.loginError = true;\n      this.loginErrorMessage = err.message\n    })\n\n  }\n\n  \n  ionViewDidEnter(){ this.backButtonSubscription = this.platform.backButton.subscribe(()=>{ \n    if ((this.router.isActive('/login', true) && this.router.url === '/login')) {\n      navigator['app'].exitApp();\n    }\n    }); } \n  \n  ionViewWillLeave(){ this.backButtonSubscription.unsubscribe();}\n}\n"]}