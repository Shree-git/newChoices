{"version":3,"sources":["webpack:///src/app/settings/settings.page.html","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/settings/settings.page.ts"],"names":["routes","path","component","loadChildren","then","m","AccountPageModule","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","SettingsPage","darkService","acccountService","themeToggle","JSON","parse","localStorage","getItem","event","console","log","toggleDarkTheme","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,EAKrB;AACED,UAAI,EAAE,SADR;AAEEE,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,yDAAmCC,IAAnC,CAAyC,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,iBAAN;AAAA,SAA1C,CAAN;AAAA;AAFhB,KALqB,CAAvB;;AAeA,QAAaC,yBAAyB;AAAA;AAAA,KAAtC;;AAAaA,6BAAyB,6DAJrC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBT,MAAtB,CAAD,CADD;AAERU,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAaI,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAT9B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,kBAAY,EAAE,CAAC,2DAAD;AAPN,KAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAaE,YAAY;AAGvB,4BAAoBC,WAApB,EAAsDC,eAAtD,EAAuF;AAAA;;AAAnE,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAC,eAAA,GAAAA,eAAA;AAFtD,aAAAC,WAAA,GAAuB,KAAvB,CAEuF,CACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAKA,WAAL,GAAmBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAnB,CATqF,CAUrF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD;;AAxBsB;AAAA;AAAA,mCA0BZ,CAEV;AA5BsB;AAAA;AAAA,+BA8BhBC,KA9BgB,EA8BX;AACV;AACA;AACAC,iBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKP,WAA3B,EAHU,CAIV;AACA;AACA;AACA;;AAEA,eAAKF,WAAL,CAAiBU,eAAjB,CAAiC,KAAKR,WAAtC,EATU,CAYV;AACD;AA3CsB;;AAAA;AAAA,OAAzB;;;;cAGmC;;cAAsC;;;;AAH5DH,gBAAY,6DALxB,gEAAU;AACTY,cAAQ,EAAE,cADD;AAETC,cAAQ,EAAR;AAAA;AAAA,gGAFS;;;;AAAA,KAAV,CAKwB,GAAZb,YAAY,CAAZ","file":"settings-settings-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"moon\\\"></ion-icon>\\n      <ion-label>\\n        Dark Theme\\n      </ion-label>\\n      <ion-toggle (ionChange)=\\\"toggle($event)\\\" [(ngModel)]=\\\"themeToggle\\\" slot=\\\"end\\\"></ion-toggle>\\n    </ion-item>\\n  </ion-list>\\n  <ion-item routerLink=\\\"./account\\\">\\n    <ion-row>\\n      <ion-col>\\n        <ion-title>Account</ion-title>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-label>Edit name, email, password</ion-label>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n  \\n  \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  },\n  {\n    path: 'account',\n    loadChildren: () => import('./account/account.module').then( m => m.AccountPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { DarkService } from './dark.service';\nimport { AccountService } from './account/account.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  themeToggle: boolean = false\n  toggleValue: boolean;\n  constructor(private darkService: DarkService, private acccountService: AccountService) { \n    // if(this.acccountService.account.darkTheme == null){\n    //   this.acccountService.updateTheme(this.themeToggle)\n    //   console.log(\"initial \", this.acccountService.account.darkTheme)\n    // }else{\n    //   this.themeToggle = this.acccountService.account.darkTheme;\n    //   console.log(\"final \", this.acccountService.account.darkTheme)\n    // }\n    // document.body.classList.toggle('dark', this.themeToggle);\n    this.themeToggle = JSON.parse(localStorage.getItem('dark'))\n    // // this.darkService.toggleDarkTheme(this.themeToggle)\n    // if (typeof localStorage.getItem('dark') == \"undefined\"){\n    //   localStorage.setItem('dark', this.themeToggle.toString()) \n    //   console.log(\"initial\", localStorage.getItem('dark'))\n    //   document.body.classList.toggle('dark', JSON.parse(localStorage.getItem('dark')));\n    // }else{\n      \n    //   this.themeToggle = JSON.parse(localStorage.getItem('dark'))\n    //   console.log(\"already\", localStorage.getItem('dark'))\n    //   document.body.classList.toggle('dark', JSON.parse(localStorage.getItem('dark')));\n    // }\n  }\n\n  ngOnInit() {\n  \n  }\n\n  toggle(event){\n    // console.log(event.target.value)\n    // this.themeToggle = !this.themeToggle\n    console.log('change', this.themeToggle)\n    // this.acccountService.updateTheme(this.themeToggle);\n    // localStorage.setItem('dark', this.themeToggle.toString())\n    // // this.darkService.toggleDarkTheme(this.themeToggle)\n    // document.body.classList.toggle('dark', this.themeToggle);\n\n    this.darkService.toggleDarkTheme(this.themeToggle)\n    \n  \n    // console.log(JSON.parse(localStorage.getItem('dark')))\n  }\n}\n"]}