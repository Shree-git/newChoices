{"version":3,"sources":["webpack:///src/app/inbox/chat/chat.page.html","webpack:///src/app/inbox/chat/chat-routing.module.ts","webpack:///src/app/inbox/chat/chat.module.ts","webpack:///src/app/inbox/chat/chat.page.scss","webpack:///src/app/inbox/chat/chat.page.ts"],"names":["routes","path","component","ChatPageRoutingModule","imports","forChild","exports","ChatPageModule","declarations","ChatPage","activatedRoute","inboxService","authService","accountService","presence","message","chat","createdAt","sender","receiver","senderName","receiverName","id","snapshot","paramMap","get","namee","iId","account","getAccount","console","log","myAccount","name","presence$","getPresence","subscribe","elem","combinedMessages","getChat","user","uid","item","setTimeout","scrollToBottomOnInit","content","scrollToBottom","Date","toISOString","fName","lName","addMessage","then","selector","template"],"mappings":"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","file":"chat-chat-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/inbox\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ name }}\\n    <div *ngIf=\\\"presence$ | async as presence\\\" class=\\\"onOff\\\"\\n      [ngClass]=\\\"{\\n          'is-success':  presence.status  === 'online',\\n          'is-warning': presence.status  === 'away',\\n          'is-danger':  presence.status  === 'offline'\\n      }\\\"\\n>\\n\\n  {{ presence.status }}\\n</div>\\n</ion-title>\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content #content>\\n  \\n  <div\\n    *ngFor=\\\"let message of (combinedMessages|async|orderBy:'createdAt':false)\\\"\\n    class=\\\"allMsg\\\"\\n  >\\n    <ion-row *ngIf=\\\"message.sender == myAccount.id\\\" class=\\\"mainMsg myMsg\\\">\\n      <ion-col>\\n        <b>{{ message.senderName }}</b><br />\\n        <span>{{ message.message }}</span>\\n        <div class=\\\"time ion-text-right\\\">\\n          {{ message.createdAt | date:'short' }}\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"message.sender == iId\\\" class=\\\"mainMsg otherMsg\\\">\\n      <ion-col>\\n        <b>{{ message.senderName }}</b><br />\\n        <span>{{ message.message }}</span>\\n        <div class=\\\"time ion-text-right\\\">\\n          {{ message.createdAt | date:'short' }}\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n  <!-- <ion-card *ngFor=\\\"let message of (combinedMessages|async)\\\" class=\\\"allMsg\\\">\\n    <ion-card-content class=\\\"otherMsg\\\">\\n      <h3>{{ account.fName }} {{ account.lName }}</h3>\\n      <h2>{{ message.message }}</h2>\\n      <h4>{{ message.createdAt | date:'short' }}</h4>\\n    </ion-card-content>\\n    <!-- <ion-card-content *ngIf=\\\"message.id == myAccount.id\\\" class=\\\"myMsg\\\">\\n      <h3>{{ myAccount.fName }} {{ myAccount.lName }}</h3>\\n      <h2>{{ message.message }}</h2>\\n      <h4>{{ message.createdAt | date:'short' }}</h4>\\n    </ion-card-content> -->\\n  <!-- </ion-card> -->\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Send a message...\\\" [(ngModel)]=\\\"message\\\"></ion-input>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-button (click)=\\\"sendMessage()\\\" [disabled]=\\\"message === ''\\\" color=\\\"primary\\\" expand=\\\"block\\\" class=\\\"msg-btn\\\">\\n          <ion-icon name=\\\"send\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPageRoutingModule } from './chat-routing.module';\n\nimport { ChatPage } from './chat.page';\nimport { OrderModule } from 'ngx-order-pipe';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPageRoutingModule,\n    OrderModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","export default \".allMsg {\\n  height: 20px;\\n  margin: 5px 3px 5px 3px;\\n}\\n\\n.mainMsg {\\n  border-radius: 10px;\\n  margin-bottom: 5px;\\n  padding: 3px;\\n}\\n\\n.myMsg {\\n  width: 70%;\\n  float: right;\\n  background: var(--ion-color-secondary);\\n}\\n\\n.otherMsg {\\n  width: 70%;\\n  float: left;\\n  background: var(--ion-color-tertiary);\\n}\\n\\n.time {\\n  font-size: small;\\n}\\n\\n.message-input {\\n  width: 100%;\\n  border: 1px solid var(--ion-color-secondary);\\n  border-radius: 10px;\\n  padding: 0px 10px;\\n}\\n\\n.is-success {\\n  background-color: var(--ion-color-success);\\n}\\n\\n.is-warning {\\n  background-color: var(--ion-color-warning);\\n}\\n\\n.is-danger {\\n  background-color: var(--ion-color-danger);\\n}\\n\\n.onOff {\\n  text-align: center;\\n  float: right;\\n  width: 30%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5ib3gvY2hhdC9EOlxcVmFscG8gQ291cnNlc1xcU3ByaW5nICcyMFxcU29mdHdhcmUgRGVzaWduIGFuZCBEZXZlbG9wbWVudFxcSW9uaWMgUHJvamVjdHNcXE5ld0Nob2ljZXNcXGNob2ljZXNOZXcvc3JjXFxhcHBcXGluYm94XFxjaGF0XFxjaGF0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvaW5ib3gvY2hhdC9jaGF0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFlBQUE7RUFDQSx1QkFBQTtBQ0FKOztBREtBO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7QUNGSjs7QURLQTtFQUNJLFVBQUE7RUFDQSxZQUFBO0VBQ0Esc0NBQUE7QUNGSjs7QURLQTtFQUNJLFVBQUE7RUFDQSxXQUFBO0VBQ0EscUNBQUE7QUNGSjs7QURLQTtFQUNJLGdCQUFBO0FDRko7O0FEU0E7RUFDSSxXQUFBO0VBQ0EsNENBQUE7RUFDQSxtQkFBQTtFQUVBLGlCQUFBO0FDUEo7O0FEY0E7RUFDSSwwQ0FBQTtBQ1hKOztBRGNBO0VBQ0ksMENBQUE7QUNYSjs7QURjQTtFQUNJLHlDQUFBO0FDWEo7O0FEY0E7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxVQUFBO0FDWEoiLCJmaWxlIjoic3JjL2FwcC9pbmJveC9jaGF0L2NoYXQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsbE1zZ3tcclxuICAgIC8vIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBtYXJnaW46IDVweCAzcHggNXB4IDNweDtcclxuICAgIC8vIHBhZGRpbmc6IDNweDtcclxuICAgIC8vIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG5cclxuLm1haW5Nc2d7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgcGFkZGluZzogM3B4O1xyXG59XHJcblxyXG4ubXlNc2d7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XHJcbn1cclxuXHJcbi5vdGhlck1zZ3tcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci10ZXJ0aWFyeSk7XHJcbn1cclxuXHJcbi50aW1le1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxufVxyXG5cclxuLy8gYntcclxuLy8gICAgIGZsb2F0OiBjZW50ZXI7XHJcbi8vIH1cclxuXHJcbi5tZXNzYWdlLWlucHV0e1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAvLyBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMHB4IDEwcHg7XHJcbn1cclxuXHJcbi5tc2ctYnRue1xyXG5cclxufVxyXG5cclxuLmlzLXN1Y2Nlc3N7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyk7XHJcbn1cclxuXHJcbi5pcy13YXJuaW5ne1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXdhcm5pbmcpO1xyXG59XHJcblxyXG4uaXMtZGFuZ2Vye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XHJcbn1cclxuXHJcbi5vbk9mZntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6IDMwJTtcclxufSIsIi5hbGxNc2cge1xuICBoZWlnaHQ6IDIwcHg7XG4gIG1hcmdpbjogNXB4IDNweCA1cHggM3B4O1xufVxuXG4ubWFpbk1zZyB7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgcGFkZGluZzogM3B4O1xufVxuXG4ubXlNc2cge1xuICB3aWR0aDogNzAlO1xuICBmbG9hdDogcmlnaHQ7XG4gIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnkpO1xufVxuXG4ub3RoZXJNc2cge1xuICB3aWR0aDogNzAlO1xuICBmbG9hdDogbGVmdDtcbiAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXRlcnRpYXJ5KTtcbn1cblxuLnRpbWUge1xuICBmb250LXNpemU6IHNtYWxsO1xufVxuXG4ubWVzc2FnZS1pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgcGFkZGluZzogMHB4IDEwcHg7XG59XG5cbi5pcy1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MpO1xufVxuXG4uaXMtd2FybmluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci13YXJuaW5nKTtcbn1cblxuLmlzLWRhbmdlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4ub25PZmYge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZsb2F0OiByaWdodDtcbiAgd2lkdGg6IDMwJTtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InboxService } from '../inbox.service';\nimport { Chat } from 'src/app/models/chat.model';\nimport { Observable, zip } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { map } from 'rxjs/operators';\nimport { ISODateString } from '@capacitor/core';\nimport { Account } from 'src/app/models/account.model';\nimport { AccountService } from 'src/app/settings/account/account.service';\nimport { IonContent } from '@ionic/angular';\nimport { PresenceService } from 'src/app/services/presence.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n  iId: string\n  message: string = ''\n \n  @ViewChild('content',{static: true}) content: IonContent\n  chat: Chat = {\n\n    message: '',\n    createdAt: '',\n    sender: '',\n    receiver: '',\n    senderName: '',\n    receiverName: ''\n  }\n  name: string;\n  account: Account\n  myAccount: Account\n  messages: Observable<Chat[]>\n  otherMessages: Observable<Chat[]>\n  combinedMessages: Observable<Chat[]>\n  presence$;\n\n  constructor(private activatedRoute: ActivatedRoute, private inboxService: InboxService, private authService: AuthenticationService,\n    private accountService: AccountService,\n    private presence: PresenceService) { \n    \n  }\n\n  ngOnInit() {\n    // this.scrollToBottomOnInit();\n    const id = this.activatedRoute.snapshot.paramMap.get('chatId')\n    const namee = this.activatedRoute.snapshot.paramMap.get('name')\n    this.iId = id\n    this.account = this.inboxService.getAccount(this.iId)\n    console.log(this.account)\n   \n    this.myAccount = this.accountService.account\n    this.name = namee;\n    console.log(\"my\", this.myAccount)\n    this.presence$ = this.presence.getPresence(this.iId);\n\n    this.presence.getPresence(this.iId).subscribe(elem=>{\n      console.log(elem)\n    })\n    // this.presence.getPresence(this.myAccount.id).subscribe(elem=>{\n    //   console.log(elem)\n    // })\n    \n  }\n\n  \n\n  ionViewWillEnter(){\n    if(this.iId){\n      this.account = this.inboxService.getAccount(this.iId)\n      console.log(this.account)\n      // var id = this.activatedRoute.snapshot.paramMap.get('chatId')\n      // this.iId = id\n      // // this.inboxService.getAccount(id)\n      // console.log(this.account)\n     \n      // this.myAccount = this.accountService.account\n  //     this.messages = this.inboxService.getChat(this.authService.user.uid, this.iId);\n  //     this.otherMessages = this.inboxService.getChat(this.iId, this.authService.user.uid)\n  //     this.combinedMessages = zip(this.messages, this.otherMessages)\n  // .pipe(map(x => (x[0].concat(x[1]).sort())))\n  //     var msg = zip(this.messages, this.otherMessages)\n  //     .pipe(map(x => x[0].concat(x[1])))\n  // .subscribe(data => {\n  //   console.log('merge', data)\n  //   data.forEach(cht =>{\n  //     console.log(cht.message)\n  //   })\n  // })\n      // this.inboxService.getChat(this.iId).subscribe(chat =>{\n      //   console.log(chat)\n      //   this.chat = chat\n      // })\n      this.combinedMessages = this.inboxService.getChat(this.authService.user.uid, this.iId);\n      this.inboxService.getChat(this.authService.user.uid, this.iId).subscribe(item=>{\n        console.log(item)\n        setTimeout(() => {\n          this.scrollToBottomOnInit();\n        }, 200);\n      })\n      // this.combinedMessages.subscribe(item=>{\n      //   setTimeout(() => {\n      //     this.scrollToBottomOnInit();\n      //   }, 500);\n      // })\n      // this.inboxService.getChat(this.authService.user.uid, this.iId).subscribe(item =>{\n      //   // console.log(item)\n      // })\n      setTimeout(() => {\n        this.scrollToBottomOnInit();\n      }, 200);\n    }\n  }\n\n  scrollToBottomOnInit() {\n    console.log('scrollToBottom');\n\n      this.content.scrollToBottom();\n    \n  }\n\n  // sortBy(prop: string) {\n  //   return this.messages.arrcompositions.sort((a, b) => a[prop] > b[prop] ? 1 : a[prop] === b[prop] ? 0 : -1);\n  // }\n\n  sendMessage(){\n    this.chat = {\n      message: this.message,\n      createdAt: new Date().toISOString(),\n      sender: this.authService.user.uid,\n      receiver: this.iId,\n      senderName: this.myAccount.fName + ' ' + this.myAccount.lName,\n      receiverName: this.account.fName + ' ' + this.account.lName\n    }\n    this.message = ''\n    this.inboxService.addMessage(this.chat).then(()=>{\n  //     this.messages = this.inboxService.getChat(this.authService.user.uid, this.iId);\n  //     this.otherMessages = this.inboxService.getChat(this.iId, this.authService.user.uid)\n  //     this.combinedMessages = zip(this.messages, this.otherMessages)\n  // .pipe(map(x => x[0].concat(x[1])))\n  setTimeout(() => {\n    this.scrollToBottomOnInit();\n  }, 200);\n  // this.combinedMessages = this.inboxService.getChat(this.authService.user.uid, this.iId);\n})\n  }\n\n}\n"]}