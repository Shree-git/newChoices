{"version":3,"sources":["webpack:///src/app/inbox/inbox.page.html","webpack:///src/app/inbox/inbox-routing.module.ts","webpack:///src/app/inbox/inbox.module.ts","webpack:///src/app/inbox/inbox.page.scss","webpack:///src/app/inbox/inbox.page.ts","webpack:///src/app/inbox/inbox.service.ts"],"names":["routes","path","component","loadChildren","then","m","ChatPageModule","InboxPageRoutingModule","imports","forChild","exports","InboxPageModule","declarations","InboxPage","presence","inboxService","authService","myId","user","uid","users","getUsers","selector","template","InboxService","accService","afStore","account","id","fName","lName","role","darkTheme","myAccount","data","collection","snapshotChanges","pipe","actions","map","a","payload","doc","ref","where","presence$","getPresence","subscribe","ele","console","log","account$","valueChanges","unreadCount","getData","dat","length","userData","sender","receiver","californiaRef","limit","coloradoRef","messages","cities","californiaCities","coloradoCities","combined","concat","count","next","asObservable","message","add","providedIn"],"mappings":"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","file":"inbox-inbox-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\"> \\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"margin-left: 100px;\\\">Chats</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div\\n    *ngFor=\\\"let user of (users|async)\\\"\\n    [routerLink]=\\\"['./chat/', user.id, user.fName+' '+user.lName]\\\"\\n    \\n  >\\n    <div *ngIf=\\\"user.id != myId\\\" class=\\\"userCard\\\">\\n      <div class=\\\"avatarP\\\">\\n        <ion-avatar *ngIf=\\\"user.account$ | async as accounty\\\">\\n          <ion-img [src]=\\\"accounty.photoURL\\\"></ion-img>\\n        </ion-avatar>\\n      </div>\\n      <div class=\\\"name\\\">\\n        <h2>{{ user.fName }} {{user.lName }}</h2>\\n      </div>\\n      <!-- <div *ngIf=\\\"user.unreadCount | async as unread\\\" class=\\\"numOfMsg\\\">\\n        <h4>{{ unread }}</h4>\\n      </div> -->\\n\\n      <div\\n        *ngIf=\\\"user.presence$ | async as presence\\\"\\n        class=\\\"onOff\\\"\\n        [ngClass]=\\\"{\\n        'is-success':  presence.status  === 'online',\\n        'is-warning': presence.status  === 'away',\\n        'is-danger':  presence.status  === 'offline'\\n    }\\\"\\n      >\\n        <!-- {{ presence.status }} -->\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <ion-card *ngFor=\\\"let user of (users|async)\\\" [routerLink]=\\\"['./chat/', user.id]\\\" class=\\\"userCard\\\"> -->\\n  <!-- <ion-card-header *ngIf=\\\"user.id != myId\\\">\\n      <div *ngIf=\\\"user.presence$ | async as presence\\\" class=\\\"onOff\\\"\\n      [ngClass]=\\\"{\\n          'is-success':  presence.status  === 'online',\\n          'is-warning': presence.status  === 'away',\\n          'is-danger':  presence.status  === 'offline'\\n      }\\\"\\n>\\n\\n  {{ presence.status }}\\n</div>\\n    </ion-card-header> -->\\n  <!-- <ion-card-content *ngIf=\\\"user.id != myId\\\">\\n      \\n      <ion-avatar *ngIf=\\\"user.account$ | async as accounty\\\">\\n        <ion-img [src]=\\\"accounty.photoURL\\\"></ion-img>\\n      </ion-avatar>\\n    \\n      <h2>{{ user.fName }} {{user.lName }}</h2>\\n      <div *ngIf=\\\"user.presence$ | async as presence\\\" class=\\\"onOff\\\"\\n      [ngClass]=\\\"{\\n          'is-success':  presence.status  === 'online',\\n          'is-warning': presence.status  === 'away',\\n          'is-danger':  presence.status  === 'offline'\\n      }\\\"\\n>\\n\\n  {{ presence.status }}\\n</div>\\n    </ion-card-content>\\n  </ion-card> -->\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InboxPage } from './inbox.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InboxPage\n  },\n  {\n    path: 'chat/:chatId/:name',\n    loadChildren: () => import('./chat/chat.module').then( m => m.ChatPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InboxPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InboxPageRoutingModule } from './inbox-routing.module';\n\nimport { InboxPage } from './inbox.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InboxPageRoutingModule\n  ],\n  declarations: [InboxPage]\n})\nexport class InboxPageModule {}\n","export default \".userCard {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: row;\\n  margin: auto;\\n  height: 50px;\\n  margin-top: 5px;\\n  background: linear-gradient(to right, var(--ion-color-primary), var(--ion-color-secondary), var(--ion-color-tertiary));\\n  padding: 10px;\\n}\\n\\n.avatarP {\\n  flex: 0.35;\\n  align-items: center;\\n}\\n\\nion-avatar {\\n  max-width: 35px;\\n  max-height: 35px;\\n}\\n\\n.name {\\n  flex: 2;\\n}\\n\\n.name h2 {\\n  font-weight: 100;\\n}\\n\\n.is-success {\\n  background-color: var(--ion-color-success);\\n}\\n\\n.is-warning {\\n  background-color: var(--ion-color-warning);\\n}\\n\\n.is-danger {\\n  background-color: var(--ion-color-danger);\\n}\\n\\n.onOff {\\n  flex: 0.12;\\n  align-items: center;\\n  height: 20px;\\n  width: 20px;\\n  border-radius: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5ib3gvRDpcXFZhbHBvIENvdXJzZXNcXFNwcmluZyAnMjBcXFNvZnR3YXJlIERlc2lnbiBhbmQgRGV2ZWxvcG1lbnRcXElvbmljIFByb2plY3RzXFxOZXdDaG9pY2VzXFxjaG9pY2VzTmV3L3NyY1xcYXBwXFxpbmJveFxcaW5ib3gucGFnZS5zY3NzIiwic3JjL2FwcC9pbmJveC9pbmJveC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBRUEsWUFBQTtFQUNBLFlBQUE7RUFFQSxlQUFBO0VBQ0Esc0hBQUE7RUFFQSxhQUFBO0FDTEo7O0FEU0E7RUFDSSxVQUFBO0VBQ0EsbUJBQUE7QUNOSjs7QURTQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtBQ05KOztBRFNBO0VBQ0ksT0FBQTtBQ05KOztBRFdBO0VBQ0ksZ0JBQUE7QUNSSjs7QURZQTtFQUNJLDBDQUFBO0FDVEo7O0FEWUE7RUFDSSwwQ0FBQTtBQ1RKOztBRFlBO0VBQ0kseUNBQUE7QUNUSjs7QURZQTtFQUNJLFVBQUE7RUFDQSxtQkFBQTtFQUlBLFlBQUE7RUFDSSxXQUFBO0VBR1IsbUJBQUE7QUNaQSIsImZpbGUiOiJzcmMvYXBwL2luYm94L2luYm94LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vICp7XHJcbi8vICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4vLyB9XHJcbi51c2VyQ2FyZHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgLy8gd2lkdGg6IDk1JTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIC8vIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KSx2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KSwgdmFyKC0taW9uLWNvbG9yLXRlcnRpYXJ5KSk7XHJcbiAgICBcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAvLyBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4uYXZhdGFyUHtcclxuICAgIGZsZXg6IDAuMzU7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG5pb24tYXZhdGFyIHtcclxuICAgIG1heC13aWR0aDogMzVweDtcclxuICAgIG1heC1oZWlnaHQ6IDM1cHg7XHJcbn1cclxuXHJcbi5uYW1le1xyXG4gICAgZmxleDoyO1xyXG4gICAgXHJcbiAgICBcclxufVxyXG5cclxuLm5hbWUgaDJ7XHJcbiAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgLy8gZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uaXMtc3VjY2Vzc3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1zdWNjZXNzKTtcclxufVxyXG5cclxuLmlzLXdhcm5pbmd7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itd2FybmluZyk7XHJcbn1cclxuXHJcbi5pcy1kYW5nZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcclxufVxyXG5cclxuLm9uT2Zme1xyXG4gICAgZmxleDogMC4xMjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAvLyB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gICAgLy8gZmxvYXQ6cmlnaHQ7XHJcbiAgICAvLyBib3JkZXI6MXB4IHNvbGlkIHJlZDtcclxuICAgIGhlaWdodDoyMHB4O1xyXG4gICAgICAgIHdpZHRoOjIwcHg7XHJcbi13ZWJraXQtYm9yZGVyLXJhZGl1czogNDBweDtcclxuLW1vei1ib3JkZXItcmFkaXVzOiA0MHB4O1xyXG5ib3JkZXItcmFkaXVzOiA0MHB4O1xyXG59XHJcblxyXG4iLCIudXNlckNhcmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgbWFyZ2luOiBhdXRvO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSksIHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnkpLCB2YXIoLS1pb24tY29sb3ItdGVydGlhcnkpKTtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLmF2YXRhclAge1xuICBmbGV4OiAwLjM1O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5pb24tYXZhdGFyIHtcbiAgbWF4LXdpZHRoOiAzNXB4O1xuICBtYXgtaGVpZ2h0OiAzNXB4O1xufVxuXG4ubmFtZSB7XG4gIGZsZXg6IDI7XG59XG5cbi5uYW1lIGgyIHtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbn1cblxuLmlzLXN1Y2Nlc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyk7XG59XG5cbi5pcy13YXJuaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXdhcm5pbmcpO1xufVxuXG4uaXMtZGFuZ2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG59XG5cbi5vbk9mZiB7XG4gIGZsZXg6IDAuMTI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDIwcHg7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNDBweDtcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiA0MHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { InboxService } from './inbox.service';\nimport { Observable } from 'rxjs';\nimport { Account } from '../models/account.model';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { User } from '../models/user.model';\nimport { PresenceService } from '../services/presence.service';\n\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.page.html',\n  styleUrls: ['./inbox.page.scss'],\n})\nexport class InboxPage implements OnInit {\n  users: Observable<any[]>\n  userData: Observable<User[]>\n  myId: string\n  presence$;\n  \n  constructor(\n    private presence: PresenceService,\n    private inboxService: InboxService, private authService: AuthenticationService) { \n    this.myId = this.authService.user.uid\n  }\n\n  ngOnInit() {\n    this.users = this.inboxService.getUsers();\n    // this.inboxService.getUsers().subscribe(elem=>{\n    //   console.log(elem)\n    // })\n    // this.inboxService.getUsers().subscribe(user=>{\n    //   user.forEach(elem=>{\n    //     this.presence$ = this.presence.getPresence(elem.id);\n\n    // this.presence.getPresence(elem.id).subscribe(ele=>{\n    //   console.log(ele)\n    // })\n    //   })\n    // });\n    // this.userData = this.inboxService.getUserData();\n    // this.users.subscribe(()=>{\n      \n    // })\n\n    // this.presence$ = this.presence.getPresence(this.iId);\n\n    // this.presence.getPresence(this.iId).subscribe(elem=>{\n    //   console.log(elem)\n    // })\n  }\n\n  ionViewWillEnter(){\n\n    // this.users = this.inboxService.getUsers();\n    // console.log(this.users)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { AccountService } from '../settings/account/account.service';\nimport { AngularFirestore, AngularFirestoreCollection, DocumentReference } from '@angular/fire/firestore';\nimport { Observable, pipe } from 'rxjs';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Account } from '../models/account.model';\nimport { map, take } from 'rxjs/operators';\nimport { Chat } from '../models/chat.model';\nimport { of } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { PresenceService } from '../services/presence.service';\n// import { combineLatest } from 'rxjs/observable/combineLatest';\n@Injectable({\n  providedIn: 'root'\n})\nexport class InboxService {\n  usersCollection: AngularFirestoreCollection\n  // users: Observable<Account[]>\n  users: Observable<any[]>\n  userData: Observable<User[]>\n  accounts: Observable<Account>[]\n  // messages: Observable<Chat[]>\n  messages: any\n  presence$;\n  account: Account = {\n    id: '',\n    fName: '',\n    lName: '',\n    role: '',\n    darkTheme: null,\n  }\n  myAccount: Account = {\n    id: '',\n    fName: '',\n    lName: '',\n    role: '',\n    darkTheme: null,\n  }\n  data: BehaviorSubject<any> = new BehaviorSubject(0);\n  constructor(\n    private presence: PresenceService,\n    private authService: AuthenticationService, private accService: AccountService,\n    private afStore: AngularFirestore) {\n    this.users = this.afStore.collection('accounts').snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data() as Account\n        const id = a.payload.doc.id;\n        return { id, ...data }\n      })\n    }))\n    // this.users = this.afStore.collection('users').snapshotChanges().pipe(map(actions=>{\n    //   return actions.map(a=>{\n    //     const data = a.payload.doc.data()\n    //     const id = a.payload.doc.id;\n\n    //     // const acc = this.getAccount(id)\n    //     // console.log(acc)\n    //     return {id, data}\n    //     // return {id, data}\n    //   })\n    // }))\n\n    // this.users.forEach(element => {\n    //   element.forEach(e => {\n    //     this.accounts.push(this.getAccount(e.id))\n    //   });\n    //   // this.accounts.push(this.getAccount(element.id))\n    // });\n\n    // console.log(this.accounts)\n  }\n\n  getUsers() {\n    this.users = this.afStore.collection('accounts',\n    ref=>ref.where('clients', 'array-contains', this.authService.user.uid)).snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data() as Account\n        var id = a.payload.doc.id;\n        var presence$ = this.presence.getPresence(id);\n\n      this.presence.getPresence(id).subscribe(ele=>{\n      console.log(ele)\n      })\n        var account$ = this.afStore.collection('users').doc(id).valueChanges()\n\n        var unreadCount = this.getData().subscribe(dat=>{\n          console.log(dat)\n          console.log(dat.length)\n          return dat.length\n        })\n        console.log(unreadCount)\n      \n\n        \n        \n        // console.log(account$)\n        // const acc = this.getAccount(id)\n        // // console.log(acc)\n        // return {acc}\n       \n        return { id, ...data, presence$, account$, unreadCount }\n        \n      })\n    }))\n    return this.users;\n  }\n\n  getUserData(){\n    this.userData = this.afStore.collection('users').snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data() as User\n        var id = a.payload.doc.id;\n        \n        // const acc = this.getAccount(id)\n        // // console.log(acc)\n        // return {acc}\n        return { id, ...data }\n      })\n    }))\n    return this.userData;\n  }\n\n  getAccount(id: string) {\n    this.afStore.collection('accounts').doc<Account>\n      (id).\n      valueChanges().pipe(\n        take(1),\n        map(account => {\n          account.id = id;\n          return account\n        })\n      ).subscribe(account => {\n        this.account = account\n      })\n    return this.account\n  }\n\n  getChat(sender: string, receiver: string): Observable<Chat[]> {\n    // return this.afStore.collection('users').doc(this.authService.user.uid).collection('chat').doc<Chat>(chatId).valueChanges().pipe(\n    //   // take(1),\n    //   map(chat=>{\n    //     chat.id = chatId;\n    //     return chat\n    //   })\n    // )\n\n    const californiaRef = this.afStore\n      .collection(\"chat\", ref => ref.where('sender', '==', sender)\n        .where('receiver', '==', receiver).limit(50)\n        );\n    const coloradoRef = this.afStore\n      .collection(\"chat\", ref => ref\n        .where('sender', '==', receiver)\n        .where('receiver', '==', sender).limit(50)\n        );\n    this.messages =\n      combineLatest(californiaRef.valueChanges(),\n        coloradoRef.valueChanges()).pipe(\n    switchMap(cities => {\n          const [californiaCities, coloradoCities] = cities;\n          const combined = californiaCities.concat(coloradoCities);\n\n          return of(combined);\n        }));\n    // .pipe(\n    //   map(arr => arr.reduce((acc, cur) => acc.concat(cur) ) ),)\n\n    // this.messages = this.afStore.collection('chat', ref => {\n    //   return ref.where('sender', 'in', [sender, receiver])\n    //     // .where('sender', '==', receiver)\n    //     // .where('receiver', '==', sender)\n    //     .where('receiver', '==', receiver)\n    //     .orderBy('createdAt', 'asc')\n    // })\n    //   .snapshotChanges()\n    //   .pipe(map(actions => {\n    //     return actions.map(a => {\n    //       const data = a.payload.doc.data() as Chat\n    //       const id = a.payload.doc.id\n    //       return { id, ...data };\n    //     })\n    //   }))\n\n    return this.messages\n    // this.journals = this.journalsCollection.snapshotChanges().pipe(map(actions=>{\n    //   return actions.map(a =>{\n    //     const data = a.payload.doc.data() as Journal\n    //     const id = a.payload.doc.id\n    //     return {id, ...data };\n    //   })\n    // }))\n  }\n\n  getUnreadChat(sender: string, receiver: string) {\n    // var count;\n   this.afStore.collection(\"chat\", ref=> ref.where('sender', '==', sender).where('receiver', '==', receiver)\n      .where('read', '==', false)\n    ).valueChanges().subscribe(count=>{\n      this.data.next(count)\n    })\n  \n    // return this.afStore.collection('users').doc(this.authService.user.uid).collection('chat').doc<Chat>(chatId).valueChanges().pipe(\n    //   // take(1),\n    //   map(chat=>{\n    //     chat.id = chatId;\n    //     return chat\n    //   })\n    // )\n\n    // const californiaRef = this.afStore\n    //   .collection(\"chat\", ref => ref.where('sender', '==', sender)\n    //     .where('receiver', '==', receiver).limit(50)\n    //     );\n    // const coloradoRef = this.afStore\n    //   .collection(\"chat\", ref => ref\n    //     .where('sender', '==', receiver)\n    //     .where('receiver', '==', sender).limit(50)\n    //     );\n    // this.messages =\n    //   combineLatest(californiaRef.valueChanges(),\n    //     coloradoRef.valueChanges()).pipe(\n    // switchMap(cities => {\n    //       const [californiaCities, coloradoCities] = cities;\n    //       const combined = californiaCities.concat(coloradoCities);\n\n    //       return of(combined);\n    //     }));\n\n\n    // .pipe(\n    //   map(arr => arr.reduce((acc, cur) => acc.concat(cur) ) ),)\n\n    // this.messages = this.afStore.collection('chat', ref => {\n    //   return ref.where('sender', 'in', [sender, receiver])\n    //     // .where('sender', '==', receiver)\n    //     // .where('receiver', '==', sender)\n    //     .where('receiver', '==', receiver)\n    //     .orderBy('createdAt', 'asc')\n    // })\n    //   .snapshotChanges()\n    //   .pipe(map(actions => {\n    //     return actions.map(a => {\n    //       const data = a.payload.doc.data() as Chat\n    //       const id = a.payload.doc.id\n    //       return { id, ...data };\n    //     })\n    //   }))\n\n    return this.messages\n    // this.journals = this.journalsCollection.snapshotChanges().pipe(map(actions=>{\n    //   return actions.map(a =>{\n    //     const data = a.payload.doc.data() as Journal\n    //     const id = a.payload.doc.id\n    //     return {id, ...data };\n    //   })\n    // }))\n  }\n  getData() {\n    return this.data.asObservable();\n  }\n  // getOtherChat(chatId: string): Observable<Chat>{\n  //   return this.afStore.collection('users').doc(chatId).collection('chat').doc<Chat>(this.authService.user.uid).valueChanges().pipe(\n  //     // take(1),\n  //     map(chat=>{\n  //       chat.id = chatId;\n  //       return chat\n  //     })\n  //   )\n  // }\n\n  addMessage(message: Chat): Promise<DocumentReference> {\n    return this.afStore.collection('chat').add(message)\n  }\n\n}\n"]}