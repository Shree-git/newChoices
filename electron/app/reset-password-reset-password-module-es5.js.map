{"version":3,"sources":["webpack:///src/app/reset-password/reset-password.page.html","webpack:///src/app/reset-password/reset-password-routing.module.ts","webpack:///src/app/reset-password/reset-password.module.ts","webpack:///src/app/reset-password/reset-password.page.scss","webpack:///src/app/reset-password/reset-password.page.ts"],"names":["routes","path","component","ResetPasswordPageRoutingModule","imports","forChild","exports","ResetPasswordPageModule","declarations","ResetPasswordPage","formBuilder","authService","alertCtrl","router","validation_messages","email","type","message","registerForm","group","compose","required","pattern","passwordReset","get","value","then","alert","create","header","cssClass","buttons","text","role","handler","navigate","present","selector","template"],"mappings":"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","file":"reset-password-reset-password-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title class=\\\"ion-text-center\\\">Choices</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"registerCard positionCard\\\">\\n    <ion-card-header class=\\\"ion-text-center\\\" style=\\\"background-color: var(--ion-color-primary);\\\"> <ion-label class=\\\"signupLabel\\\">Reset Password</ion-label></ion-card-header>\\n    <ion-card-content>\\n      <ion-list lines=\\\"none\\\">\\n        <form [formGroup]=\\\"registerForm\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Enter Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('email').hasError(validation.type) && (registerForm.get('email').dirty || registerForm.get('email').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n        </form>\\n      </ion-list>\\n      <ion-button\\n        expand=\\\"full\\\"\\n        color=\\\"primary\\\"\\n        [disabled]=\\\"!registerForm.valid\\\"\\n        (click)=\\\"reset()\\\"\\n        >Send</ion-button\\n      >\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"positionCard\\\">\\n    <ion-card-content class=\\\"ion-text-center\\\">\\n      <h2>Don't have an account? <ion-button routerLink=\\\"../register\\\">Sign Up</ion-button></h2>\\n      <h2>Already have an account? <ion-button routerLink=\\\"../login\\\">Login</ion-button></h2>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","export default \".error-message {\\n  color: var(--ion-color-danger);\\n}\\n\\n.signupLabel {\\n  font-size: 1.6em;\\n  font-weight: bold;\\n}\\n\\n.positionCard {\\n  position: relative;\\n  border-radius: 15px;\\n  top: 7%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXQtcGFzc3dvcmQvRDpcXFZhbHBvIENvdXJzZXNcXFNwcmluZyAnMjBcXFNvZnR3YXJlIERlc2lnbiBhbmQgRGV2ZWxvcG1lbnRcXElvbmljIFByb2plY3RzXFxOZXdDaG9pY2VzXFxjaG9pY2VzTmV3L3NyY1xcYXBwXFxyZXNldC1wYXNzd29yZFxccmVzZXQtcGFzc3dvcmQucGFnZS5zY3NzIiwic3JjL2FwcC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREdBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtFQUVGLE9BQUE7QUNERiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdle1xyXG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xyXG59XHJcblxyXG4uc2lnbnVwTGFiZWx7XHJcbiAgICBmb250LXNpemU6IDEuNmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAvLyBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XHJcbn1cclxuXHJcbi5wb3NpdGlvbkNhcmR7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gIFxyXG4gIHRvcDogNyU7XHJcbn0iLCIuZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcbn1cblxuLnNpZ251cExhYmVsIHtcbiAgZm9udC1zaXplOiAxLjZlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5wb3NpdGlvbkNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIHRvcDogNyU7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n  registerForm: FormGroup\n\n  public validation_messages = {\n  \n    email: [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Please enter a valid email address' }\n    ],\n   \n  }\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private alertCtrl: AlertController,\n    private router: Router) {\n    this.registerForm = this.formBuilder.group({\n   \n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n  \n    \n    })\n  }\n\n  ngOnInit() {\n  }\n\n  reset(){\n    return this.authService.passwordReset(this.registerForm.get('email').value).then(async ()=>{\n      const alert = this.alertCtrl.create({\n        header: 'Password Reset Email Sent',\n        cssClass: 'buttonCss',\n        message: 'Check you email to reset your password',\n        buttons: [{\n          text: 'OK',\n          role: 'OK',\n          cssClass: 'first-button',\n          handler: ()=>{\n            this.router.navigate(['../login'])\n          }\n        }]\n      })\n      await (await alert).present()\n    })\n    \n  }\n\n}\n"]}