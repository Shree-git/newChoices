{"version":3,"sources":["./src/app/reset-password/reset-password.page.html","./src/app/reset-password/reset-password-routing.module.ts","./src/app/reset-password/reset-password.module.ts","./src/app/reset-password/reset-password.page.scss","./src/app/reset-password/reset-password.page.ts"],"names":[],"mappings":"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","file":"reset-password-reset-password-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title class=\\\"ion-text-center\\\">Choices</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card class=\\\"registerCard positionCard\\\">\\n    <ion-card-header class=\\\"ion-text-center\\\" style=\\\"background-color: var(--ion-color-primary);\\\"> <ion-label class=\\\"signupLabel\\\">Reset Password</ion-label></ion-card-header>\\n    <ion-card-content>\\n      <ion-list lines=\\\"none\\\">\\n        <form [formGroup]=\\\"registerForm\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Enter Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required></ion-input>\\n          </ion-item>\\n\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div\\n                class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('email').hasError(validation.type) && (registerForm.get('email').dirty || registerForm.get('email').touched)\\\"\\n              >\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n\\n        </form>\\n      </ion-list>\\n      <ion-button\\n        expand=\\\"full\\\"\\n        color=\\\"primary\\\"\\n        [disabled]=\\\"!registerForm.valid\\\"\\n        (click)=\\\"reset()\\\"\\n        >Send</ion-button\\n      >\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"positionCard\\\">\\n    <ion-card-content class=\\\"ion-text-center\\\">\\n      <h2>Don't have an account? <ion-button routerLink=\\\"../register\\\">Sign Up</ion-button></h2>\\n      <h2>Already have an account? <ion-button routerLink=\\\"../login\\\">Login</ion-button></h2>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","export default \".error-message {\\n  color: var(--ion-color-danger);\\n}\\n\\n.signupLabel {\\n  font-size: 1.6em;\\n  font-weight: bold;\\n}\\n\\n.positionCard {\\n  position: relative;\\n  border-radius: 15px;\\n  top: 7%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXQtcGFzc3dvcmQvRDpcXFZhbHBvIENvdXJzZXNcXFNwcmluZyAnMjBcXFNvZnR3YXJlIERlc2lnbiBhbmQgRGV2ZWxvcG1lbnRcXElvbmljIFByb2plY3RzXFxOZXdDaG9pY2VzXFxjaG9pY2VzTmV3L3NyY1xcYXBwXFxyZXNldC1wYXNzd29yZFxccmVzZXQtcGFzc3dvcmQucGFnZS5zY3NzIiwic3JjL2FwcC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4QkFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREdBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtFQUVGLE9BQUE7QUNERiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdle1xyXG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xyXG59XHJcblxyXG4uc2lnbnVwTGFiZWx7XHJcbiAgICBmb250LXNpemU6IDEuNmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAvLyBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XHJcbn1cclxuXHJcbi5wb3NpdGlvbkNhcmR7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gIFxyXG4gIHRvcDogNyU7XHJcbn0iLCIuZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcbn1cblxuLnNpZ251cExhYmVsIHtcbiAgZm9udC1zaXplOiAxLjZlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5wb3NpdGlvbkNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIHRvcDogNyU7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n  registerForm: FormGroup\n\n  public validation_messages = {\n  \n    email: [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Please enter a valid email address' }\n    ],\n   \n  }\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private alertCtrl: AlertController,\n    private router: Router) {\n    this.registerForm = this.formBuilder.group({\n   \n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n  \n    \n    })\n  }\n\n  ngOnInit() {\n  }\n\n  reset(){\n    return this.authService.passwordReset(this.registerForm.get('email').value).then(async ()=>{\n      const alert = this.alertCtrl.create({\n        header: 'Password Reset Email Sent',\n        cssClass: 'buttonCss',\n        message: 'Check you email to reset your password',\n        buttons: [{\n          text: 'OK',\n          role: 'OK',\n          cssClass: 'first-button',\n          handler: ()=>{\n            this.router.navigate(['../login'])\n          }\n        }]\n      })\n      await (await alert).present()\n    })\n    \n  }\n\n}\n"],"sourceRoot":"webpack:///"}